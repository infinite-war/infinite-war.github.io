{"title":"java 基本语法 (二)","slug":"java语法基础(二)","date":"2021-12-04","updated":"2022-01-31","comments":true,"path":"api/posts/54575.json","excerpt":null,"cover":"https://img-blog.csdnimg.cn/ad3becde0c2948f2bef339934b5b9259.png#pic_center","covers":["https://img-blog.csdnimg.cn/ad3becde0c2948f2bef339934b5b9259.png#pic_center","https://img-blog.csdnimg.cn/03b1a3a253fa4b399b67a00605e8d820.png?x-oss-process=image"],"content":"<h1 id=\"java 过程控制\"><a href=\"#java 过程控制\" class=\"headerlink\" title=\"java 过程控制\"></a>java 过程控制</h1><p>CSDN:<a href=\"https://blog.csdn.net/INFINITE_WAR/article/details/121721051\">https://blog.csdn.net/INFINITE_WAR/article/details/121721051</a></p>\n<h2 id=\"Scanner 对象\"><a href=\"#Scanner 对象\" class=\"headerlink\" title=\"Scanner 对象\"></a>Scanner 对象 </h2><h3 id=\"一般输入\"><a href=\"# 一般输入\" class=\"headerlink\" title=\"一般输入\"></a> 一般输入</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br></pre></td></tr></table></figure>\n\n<p>Scanner 类可以用来获取用户输入</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Scanner  in=<span class=\"keyword\">new</span> Scanner(System.in)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner scanner=<span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 使用 next 方式接收 &quot;</span>);</span><br><span class=\"line\">        String str=scanner.nextLine();   <span class=\"comment\">// 也可以使用 next()</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 输出的内容为 &quot;</span>+str);</span><br><span class=\"line\"></span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>next():</p>\n<ol>\n<li>一定要读取到有效字符后才可以结束输入</li>\n<li>对输入有效字符之前遇到的空包，next()方法会自动将其去掉</li>\n<li>只有输入有效字符后才会把其后面输入的空白符作为分隔符或者结束符</li>\n<li><strong>next()不能获取带空格的字符串</strong></li>\n</ol>\n<p>nextLine():</p>\n<ol>\n<li>以 Enter 作为结束符，返回的是输入回车之前的所有字符</li>\n<li><strong>可以获取带空格的字符串</strong></li>\n</ol>\n<p>例如：同样输入”hello world”。next()返回”hello”，nextLine()返回”hello world”</p>\n<p>可参考博客：<a href=\"https://blog.csdn.net/gao_zhennan/article/details/80562548?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.opensearchhbase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.opensearchhbase\">https://blog.csdn.net/gao_zhennan/article/details/80562548?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.opensearchhbase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.opensearchhbase</a></p>\n<p>个人感觉方法名里的”next”是当前指针所指的位置，而不是这个指针的下一个位置。</p>\n<h3 id=\"带判断的输入\"><a href=\"# 带判断的输入\" class=\"headerlink\" title=\"带判断的输入\"></a>带判断的输入</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner scanner=<span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">float</span> f=<span class=\"number\">0.0f</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 请输入一个数：&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(scanner.hasNextInt())&#123;</span><br><span class=\"line\">            i= scanner.nextInt();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 整数数据：&quot;</span>+i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> System.out.println(<span class=\"string\">&quot; 输入的不是一个整数 &quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 假如上一个输入不是整数，那么 i 不会被赋值，scanner 中的内容不会被取出，会留到接下来的分支中</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 请输入一个小数：&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(scanner.hasNextFloat()) &#123;</span><br><span class=\"line\">            f= scanner.nextFloat();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 小数数据：&quot;</span>+f);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> System.out.println(<span class=\"string\">&quot; 输入的不是一个小数 &quot;</span>);</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>hasNext（） 是检测 还有没有 <strong> 下一个 </strong> 输入，没有则会等待输入</li>\n<li>next（）是指针移动到当前下标，并 <strong> 取出下一个 </strong> 输入</li>\n<li>nextLine（） 把指针移动到 <strong> 下一行 </strong> 让然后<strong> 取出当前这一行 </strong> 的输入</li>\n<li>hasNextLine（） 是检测 <strong> 下一行 </strong> 有没有输入，没有则会等待输入</li>\n</ul>\n<p>hasNextInt()等方法与上述方法类似。</p>\n<h2 id=\"顺序、循环、分支\"><a href=\"# 顺序、循环、分支\" class=\"headerlink\" title=\"顺序、循环、分支\"></a>顺序、循环、分支 </h2><p> 大部分和 C++ 无区别</p>\n<p>值得注意的是 对于 while 语句，C++ 可以这样写</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> m=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(m--)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//statements</span></span><br><span class=\"line\">&#125;<span class=\"comment\">//C++ 会默认把 m 的值转成 bool 类型，m==0 返回 true</span></span><br></pre></td></tr></table></figure>\n\n<p>但是 java 中不能这样写，必须严格返回一个 boolean 值。</p>\n<p>同样，C++ 中可以用 while(1)表示死循环，java 必须用 while(true)。</p>\n<p>java 的 switch 用法跟 C++ 相同，不过 java 的 switch 中的<u>case 可以判断 String 类型</u></p>\n<p>java 的 for 还有另一种用法（C++ 其实也有）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] nums=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x:nums)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//statements</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"java 方法\"><a href=\"#java 方法\" class=\"headerlink\" title=\"java 方法\"></a>java 方法 </h1><p> 方法即函数。定义、用法和 C++ 大体相同。</p>\n<table>\n<thead>\n<tr>\n<th>参数传递</th>\n<th>方式</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>值传递</td>\n<td>传入函数的参数是一个备份</td>\n</tr>\n<tr>\n<td>引用传递</td>\n<td>传入函数的参数是一个引用地址</td>\n</tr>\n</tbody></table>\n<p>关于参数传递更详细的解释可以参考<a href=\"https://www.zhihu.com/question/385114001\">https://www.zhihu.com/question/385114001</a></p>\n<h2 id=\"重载\"><a href=\"# 重载\" class=\"headerlink\" title=\"重载\"></a>重载 </h2><p> 重载规则：</p>\n<ol>\n<li>方法名相同</li>\n<li>参数列表必须不同(个数不同、或类型不同、或参数排列顺序不同等)</li>\n<li>不区分返回类型</li>\n</ol>\n<p>方法名称相同时，编译器会根据调用方法的参数个数、参数类型等去诸葛匹配，以选择对应的方法，如果匹配失败，则编译器报错。</p>\n<h2 id=\"可变参数\"><a href=\"# 可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数 </h2><p> 又称不定项参数，目的是使一个函数可以灵活处理不确定数量的参数。</p>\n<p>函数声明时，在指定参数类型后加一个省略号(…)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printMax</span><span class=\"params\">(<span class=\"keyword\">double</span>... numbers)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//numbers 使用时可以当成数组用，可以通过 numbers.length 获取参数的数量</span></span></span><br></pre></td></tr></table></figure>\n\n<p><u>一个函数中只能指定一个可变参数，它必须是函数的最后一个参数</u>。任何普通的参数必须在它之前声明。</p>\n<h1 id=\"数组\"><a href=\"# 数组\" class=\"headerlink\" title=\"数组\"></a>数组 </h1><h2 id=\"声明\"><a href=\"# 声明\" class=\"headerlink\" title=\"声明\"></a> 声明 </h2><h3 id=\"一维数组\"><a href=\"# 一维数组\" class=\"headerlink\" title=\"一维数组\"></a> 一维数组 </h3><p> 以下两种声明方式等价</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] a;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[];</span><br></pre></td></tr></table></figure>\n\n<p>使用 new 操作符创建数组</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dataType[] arrayRefvar=<span class=\"keyword\">new</span> dataType[arrRefvar];</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">int</span>[] a=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];  <span class=\"comment\">// 定长声明</span></span><br></pre></td></tr></table></figure>\n\n<p>静态初始化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] a=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">Animal x=&#123;<span class=\"keyword\">new</span> Animal(),<span class=\"keyword\">new</span> Animal&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>动态初始化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] b=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];  <span class=\"comment\">//b 的元素会有默认值</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-2- 多维数组\"><a href=\"#1-2- 多维数组\" class=\"headerlink\" title=\"1.2. 多维数组\"></a>1.2. 多维数组</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] a=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[r][c];  <span class=\"comment\">//int[行数][列数]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[][] array=&#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;,&#123;<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;&#125;;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"java 内存初步\"><a href=\"#java 内存初步\" class=\"headerlink\" title=\"java 内存初步\"></a>java 内存初步 </h2><p> 堆：</p>\n<ol>\n<li>存放 new 的对象和数组</li>\n<li>可以被所有的线程共享，不会被别的对象引用</li>\n</ol>\n<p>栈：</p>\n<ol>\n<li>存放基本变量类型(会包含这个基本类型的具体数值)</li>\n<li>引用对象的变量 (会存放这个引用在堆里面的<u> 具体地址</u>)</li>\n</ol>\n<p>方法区：</p>\n<ol>\n<li>可以被所有的线程共享</li>\n<li>包含了所有的 class 和 static 变量</li>\n</ol>\n<h2 id=\"传参\"><a href=\"# 传参\" class=\"headerlink\" title=\"传参\"></a>传参</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">function</span><span class=\"params\">(<span class=\"keyword\">int</span>[] array)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Arrays 类\"><a href=\"#Arrays 类\" class=\"headerlink\" title=\"Arrays 类\"></a>Arrays 类</h2><p>java.util.Arrays</p>\n<p>例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a[]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        System.out.println(Arrays.toString(a));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出如下</p>\n<p><img src=\"https://img-blog.csdnimg.cn/ad3becde0c2948f2bef339934b5b9259.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a[]=&#123;<span class=\"number\">5</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">    \tArrays.sort(a);    <span class=\"comment\">// 升序排序</span></span><br><span class=\"line\">        System.out.println(Arrays.toString(a));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>更多具体方法见官方文档，也可以直接进入 Arrays 类查看具体实现</p>\n<h2 id=\"稀疏数组 - 数组练习\"><a href=\"# 稀疏数组 - 数组练习\" class=\"headerlink\" title=\"稀疏数组 (数组练习)\"></a> 稀疏数组 (数组练习)</h2><p> 如果一个大型数组中 0 元素过多，称之为稀疏数组，此时没有必要存储它的所有制，只用存储非 0 值的相关信息即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建二维数组 11*11    0：没有棋子   1：黑子   2：白子 </span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] array1=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">11</span>][<span class=\"number\">11</span>];</span><br><span class=\"line\">        array1[<span class=\"number\">1</span>][<span class=\"number\">2</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        array1[<span class=\"number\">2</span>][<span class=\"number\">3</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 输出原始的数组</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 输出原始的数组 &quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">11</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">11</span>;j++)&#123;</span><br><span class=\"line\">                System.out.print(array1[i][j]+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 转换为稀疏数组</span></span><br><span class=\"line\">        <span class=\"comment\">// 获取有效值的个数</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">11</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">11</span>;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(array1[i][j]!=<span class=\"number\">0</span>) sum++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建一个稀疏数组的数组</span></span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        * array[0][0] 存储行数，array[0][1]存储列数，array[0][2]存储非 0 元素的个数，</span></span><br><span class=\"line\"><span class=\"comment\">        * 另外，对于 array2 除了第 0 行的每一行 array2[i]</span></span><br><span class=\"line\"><span class=\"comment\">        * array[i][0]存储非 0 元素所在的行 </span></span><br><span class=\"line\"><span class=\"comment\">        * array[i][1] 存储非 0 元素所在的列 </span></span><br><span class=\"line\"><span class=\"comment\">        * array[i][2] 存储非 0 元素的值</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] array2=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[sum+<span class=\"number\">1</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">        array2[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=array2[<span class=\"number\">0</span>][<span class=\"number\">1</span>]=<span class=\"number\">11</span>;</span><br><span class=\"line\">        array2[<span class=\"number\">0</span>][<span class=\"number\">2</span>]=sum;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;array1.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;array1.length;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(array1[i][j]!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    count++;</span><br><span class=\"line\">                    array2[count][<span class=\"number\">0</span>]=i;</span><br><span class=\"line\">                    array2[count][<span class=\"number\">1</span>]=j;</span><br><span class=\"line\">                    array2[count][<span class=\"number\">2</span>]=array1[i][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 输出稀疏数组</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 输出稀疏数组 &quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;array2.length;i++)&#123;</span><br><span class=\"line\">            System.out.println(Arrays.toString(array2[i]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//=========================//</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;================================&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 还原 &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//1. 读取稀疏数组</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] array3=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[array2[<span class=\"number\">0</span>][<span class=\"number\">0</span>]][array2[<span class=\"number\">0</span>][<span class=\"number\">1</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 还原值</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;array2.length;i++)&#123;</span><br><span class=\"line\">            array3[array2[i][<span class=\"number\">0</span>]][array2[i][<span class=\"number\">1</span>]]=array2[i][<span class=\"number\">2</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 输出还原的数组 &quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">11</span>;i++)&#123;</span><br><span class=\"line\">            System.out.println(Arrays.toString(array3[i]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出如下<br><img src=\"https://img-blog.csdnimg.cn/03b1a3a253fa4b399b67a00605e8d820.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n","url":"/posts/54575/","min2read":7,"word4post":"1.8k","prev_post":{"title":"java 基本语法 (三)：面向对象、异常","url":"/posts/20645/"},"next_post":{"title":"java 语法基础 (一)","url":"/posts/1098/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"java 过程控制\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">java 过程控制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Scanner 对象\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\">Scanner 对象 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"一般输入\" href = \"#\"><span class=\"toc-number\">1.1.1.</span> <span class=\"toc-text\"> 一般输入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"带判断的输入\" href = \"#\"><span class=\"toc-number\">1.1.2.</span> <span class=\"toc-text\">带判断的输入</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"顺序、循环、分支\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">顺序、循环、分支 </span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"java 方法\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">java 方法 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"重载\" href = \"#\"><span class=\"toc-number\">2.1.</span> <span class=\"toc-text\">重载 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"可变参数\" href = \"#\"><span class=\"toc-number\">2.2.</span> <span class=\"toc-text\">可变参数 </span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"数组\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">数组 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"声明\" href = \"#\"><span class=\"toc-number\">3.1.</span> <span class=\"toc-text\"> 声明 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"一维数组\" href = \"#\"><span class=\"toc-number\">3.1.1.</span> <span class=\"toc-text\"> 一维数组 </span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"1-2- 多维数组\" href = \"#\"><span class=\"toc-number\">3.1.2.</span> <span class=\"toc-text\">1.2. 多维数组</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"java 内存初步\" href = \"#\"><span class=\"toc-number\">3.2.</span> <span class=\"toc-text\">java 内存初步 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"传参\" href = \"#\"><span class=\"toc-number\">3.3.</span> <span class=\"toc-text\">传参</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Arrays 类\" href = \"#\"><span class=\"toc-number\">3.4.</span> <span class=\"toc-text\">Arrays 类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"稀疏数组 - 数组练习\" href = \"#\"><span class=\"toc-number\">3.5.</span> <span class=\"toc-text\"> 稀疏数组 (数组练习)</span></a></li></ol></li></ol>","categories":[],"tags":[{"name":"JavaSE","path":"api/tags/JavaSE.json","url":"/tags/JavaSE/"}]}