{"title":"Java 多线程基础","slug":"Java多线程","date":"2022-01-17","updated":"2022-01-31","comments":true,"path":"api/posts/24112.json","excerpt":null,"cover":"https://img-blog.csdnimg.cn/184e9b96564944b0aa5a5f8395bc50f5.png#pic_center","covers":["https://img-blog.csdnimg.cn/184e9b96564944b0aa5a5f8395bc50f5.png#pic_center","https://img-blog.csdnimg.cn/d5a74a2627374d578e867a5aea0ff0dc.png?x-oss-process=image","https://img-blog.csdnimg.cn/c270924911b9474eb9d83821502029bd.png?x-oss-process=image","https://img-blog.csdnimg.cn/9c50185ba72e448986bb5725bbf0ab1b.png?x-oss-process=image","https://img-blog.csdnimg.cn/c14d033cbf5042e89cefb312b8328e7e.png#pic_center","https://img-blog.csdnimg.cn/0ef97546f36b4129b02457ecb059114c.png#pic_center","https://img-blog.csdnimg.cn/0af4b466fdbb416595bab74e62212832.png#pic_center","https://img-blog.csdnimg.cn/ef6845c28e94490680668054f2fa6650.png#pic_center","https://img-blog.csdnimg.cn/e3c05f399ca04b38a26ed4e8ef93d870.png?x-oss-process=image","https://img-blog.csdnimg.cn/8ca4f159d8bf4c8ab97d5b9916939eb2.png?x-oss-process=image","https://img-blog.csdnimg.cn/6d3237dc79ff4a32a36f77e81806c702.png?x-oss-process=image","https://img-blog.csdnimg.cn/c2864545c80345d1af4ddd1f759b4a82.png?x-oss-process=image","https://img-blog.csdnimg.cn/33be83adbf264fdcbaa6dfe6cd344049.png#pic_center","https://img-blog.csdnimg.cn/0e7fb8d1ce1f426caaad232850b77251.png#pic_center","https://img-blog.csdnimg.cn/d9719351adaa4fccbcf35efbf05ee113.png#pic_center","https://img-blog.csdnimg.cn/e1ae6e14a6df47b390f6532769914459.png#pic_center","https://img-blog.csdnimg.cn/116808f2d4a84fba9b6c7cd6e970d2d8.png?x-oss-process=image","https://img-blog.csdnimg.cn/fc0e9ae6b3d0487d83aa3a375e43aee4.png?x-oss-process=image","https://img-blog.csdnimg.cn/32ea06e8b11f4800b1398fbb06043e33.png?x-oss-process=image","https://img-blog.csdnimg.cn/fbfa55df92d34c8a94cac65e3ea7c450.png?x-oss-process=image","https://img-blog.csdnimg.cn/58b35963a65943b79d273a51a71ddc24.png?x-oss-process=image","https://img-blog.csdnimg.cn/f6a2772fde1e42ec8756b7058f3b7330.png?x-oss-process=image","https://img-blog.csdnimg.cn/5fded5f57c9443b59b4c58dae67076d2.png?x-oss-process=image"],"content":"<h1 id=\"Java 多线程\"><a href=\"#Java 多线程\" class=\"headerlink\" title=\"Java 多线程\"></a>Java 多线程 </h1><p> 参考视频:BV1V4411p7EF</p>\n<p>并发相关概念已经学过，可以直接参考操作系统相关书籍，这里不再记录。</p>\n<p>CSDN:<a href=\"https://blog.csdn.net/INFINITE_WAR/article/details/122547019\">https://blog.csdn.net/INFINITE_WAR/article/details/122547019</a></p>\n<h1 id=\"线程创建\"><a href=\"# 线程创建\" class=\"headerlink\" title=\"线程创建\"></a>线程创建 </h1><p> 父类：Thread   (java.lang.Thread)<br>接口：Runnable、Callable</p>\n<h2 id=\"创建 Thread\"><a href=\"# 创建 Thread\" class=\"headerlink\" title=\"创建 Thread\"></a>创建 Thread</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//run 方法线程体 </span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 吃饭 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 主线程</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建一个线程对象</span></span><br><span class=\"line\">        TestThread testThread=<span class=\"keyword\">new</span> TestThread();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 调用 start() 方法开启线程。调用 run()方法不会实现并发</span></span><br><span class=\"line\">        testThread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">40</span>;i++)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 看电视 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/184e9b96564944b0aa5a5f8395bc50f5.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>注：每次执行结果可能不一样</p>\n<h2 id=\"多线程网图下载\"><a href=\"# 多线程网图下载\" class=\"headerlink\" title=\"多线程网图下载\"></a>多线程网图下载 </h2><p> 可用工具包：<a href=\"https://commons.apache.org/proper/commons-io/download_io.cgi\">https://commons.apache.org/proper/commons-io/download_io.cgi</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestThread</span><span class=\"params\">(String url, String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 下载图片执行体</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        WebDownloader webDownloader=<span class=\"keyword\">new</span> WebDownloader();</span><br><span class=\"line\">        webDownloader.downloader(url,name);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 下载的文件名为：&quot;</span>+name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        TestThread t1=<span class=\"keyword\">new</span> TestThread(<span class=\"string\">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fup.enterdesk.com%2Fedpic_source%2F1d%2Fd7%2F74%2F1dd7742b0e08837f0afb77d3c9006a75.jpg&amp;refer=http%3A%2F%2Fup.enterdesk.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1644976584&amp;t=c01c909514022ae483b88d1f5570fe2d&quot;</span>,<span class=\"string\">&quot;1.jpg&quot;</span>);</span><br><span class=\"line\">        TestThread t2=<span class=\"keyword\">new</span> TestThread(<span class=\"string\">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpic1.win4000.com%2Fwallpaper%2F2020-11-06%2F5fa4dec85d63f.jpg&amp;refer=http%3A%2F%2Fpic1.win4000.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1644976692&amp;t=f0ec64a96d2eba5ebd5942bd42381e53&quot;</span>,<span class=\"string\">&quot;2.jpg&quot;</span>);</span><br><span class=\"line\">        TestThread t3=<span class=\"keyword\">new</span> TestThread(<span class=\"string\">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.3dmgame.com%2Fuploads%2Fimages%2Fnews%2F20200701%2F1593590839_180447.jpg&amp;refer=http%3A%2F%2Fimg.3dmgame.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1644976721&amp;t=6d631b3087b6a7ef424b4d7c74e1aa15&quot;</span>,<span class=\"string\">&quot;3.jpg&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        t1.start();</span><br><span class=\"line\">        t2.start();</span><br><span class=\"line\">        t3.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下载器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebDownloader</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">downloader</span><span class=\"params\">(String url,String name)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            FileUtils.copyURLToFile(<span class=\"keyword\">new</span> URL(url),<span class=\"keyword\">new</span> File(name));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;downloader 方法出现 IO 异常 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/d5a74a2627374d578e867a5aea0ff0dc.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"实现 Runnable 接口\"><a href=\"# 实现 Runnable 接口\" class=\"headerlink\" title=\"实现 Runnable 接口\"></a>实现 Runnable 接口</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.1 创建 Thread 改写</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//run 方法线程体</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 吃饭 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建 Runnable 接口的实现类对象</span></span><br><span class=\"line\">        TestThread testThread1=<span class=\"keyword\">new</span> TestThread();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建线程对象，通过线程对象来开启线程，又称代理</span></span><br><span class=\"line\">        Thread thread=<span class=\"keyword\">new</span> Thread(testThread1);</span><br><span class=\"line\">        thread.start();</span><br><span class=\"line\">        <span class=\"comment\">// 上面两行也可以简写成  new Thread(testThread1).start();</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">40</span>;i++)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 看电视 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//......</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建 t1,t2,t3</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//......</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(t1).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(t2).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(t3).start();</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下载器</span></span><br><span class=\"line\"><span class=\"comment\">//......</span></span><br></pre></td></tr></table></figure>\n\n\n\n<table>\n<thead>\n<tr>\n<th>继承 Thread 类</th>\n<th>实现 Runnable 接口</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>子类继承 Thread 类具备多线程能力</td>\n<td>实现接口 Runnable 具有多线程能力</td>\n</tr>\n<tr>\n<td>启动线程：子类对象.start()</td>\n<td>启动线程：传入目标对象 +Thread 对象.start()</td>\n</tr>\n<tr>\n<td>不建议使用：避免 OOP 单继承局限性</td>\n<td>推荐使用：避免单继承的局限性，灵活方便，便于同一个对象被多个线程使用</td>\n</tr>\n</tbody></table>\n<h2 id=\"实现 Callable 接口（次要）\"><a href=\"# 实现 Callable 接口（次要）\" class=\"headerlink\" title=\"实现 Callable 接口（次要）\"></a>实现 Callable 接口（次要）</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">*  1.2 网图下载改写</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Callable</span>&lt;<span class=\"title\">Boolean</span>&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String url;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestThread</span><span class=\"params\">(String url, String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 下载图片执行体</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Boolean <span class=\"title\">call</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        WebDownloader webDownloader=<span class=\"keyword\">new</span> WebDownloader();</span><br><span class=\"line\">        webDownloader.downloader(url,name);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 下载的文件名为：&quot;</span>+name);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建 t1,t2,t3</span></span><br><span class=\"line\">        <span class=\"comment\">//......</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 创建执行服务</span></span><br><span class=\"line\">        ExecutorService ser= Executors.newFixedThreadPool(<span class=\"number\">3</span>); <span class=\"comment\">// 线程池</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 提交执行</span></span><br><span class=\"line\">        Future&lt;Boolean&gt; r1=ser.submit(t1);</span><br><span class=\"line\">        Future&lt;Boolean&gt; r2=ser.submit(t2);</span><br><span class=\"line\">        Future&lt;Boolean&gt; r3=ser.submit(t3);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 获取结果</span></span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> rs1=r1.get();</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> rs2=r2.get();</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> rs3=r3.get();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 关闭服务</span></span><br><span class=\"line\">        ser.shutdown();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下载器</span></span><br><span class=\"line\"><span class=\"comment\">//......</span></span><br></pre></td></tr></table></figure>\n\n<p>实现 Callable 接口的好处：</p>\n<ol>\n<li>可以定义返回值</li>\n<li>可以抛出异常</li>\n</ol>\n<h2 id=\"例子：购买火车票\"><a href=\"# 例子：购买火车票\" class=\"headerlink\" title=\"例子：购买火车票\"></a>例子：购买火车票 </h2><p> 多个线程操作同一个对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.commons.io.FileUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 剩余票数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> ticketNums=<span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(ticketNums&lt;=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 模拟延时</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">200</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot;--&gt; 拿到了第：&quot;</span>+ticketNums--+<span class=\"string\">&quot; 张票 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        TestThread ticket=<span class=\"keyword\">new</span> TestThread();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(ticket,<span class=\"string\">&quot; 张三 &quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(ticket,<span class=\"string\">&quot; 李四 &quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(ticket,<span class=\"string\">&quot; 黄牛 &quot;</span>).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/c270924911b9474eb9d83821502029bd.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p>由结果可以看出，多线程代码可能会出现数据不安全的问题。需要用并发方法解决。</p>\n<h2 id=\"例子：龟兔赛跑\"><a href=\"# 例子：龟兔赛跑\" class=\"headerlink\" title=\"例子：龟兔赛跑\"></a>例子：龟兔赛跑</h2><p><img src=\"https://img-blog.csdnimg.cn/9c50185ba72e448986bb5725bbf0ab1b.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Race</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String winner;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=<span class=\"number\">100</span>;i++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 模拟兔子偷懒</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Thread.currentThread().getName().equals(<span class=\"string\">&quot; 兔子 &quot;</span>) &amp;&amp; i%<span class=\"number\">30</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 判断比赛是否结束</span></span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> flag=gameOver(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(flag) &#123;<span class=\"keyword\">break</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot;--&gt; 已经跑了 &quot;</span>+i+<span class=\"string\">&quot; 步 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断是否完成比赛</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">gameOver</span><span class=\"params\">(<span class=\"keyword\">int</span> steps)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 判断胜利者</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(winner!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(steps==<span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">            winner=Thread.currentThread().getName();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;winner is &quot;</span>+winner);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Race race=<span class=\"keyword\">new</span> Race();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(race,<span class=\"string\">&quot; 兔子 &quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(race,<span class=\"string\">&quot; 乌龟 &quot;</span>).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/c14d033cbf5042e89cefb312b8328e7e.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"静态代理模式\"><a href=\"# 静态代理模式\" class=\"headerlink\" title=\"静态代理模式\"></a>静态代理模式 </h2><p> 真实目标角色和代理角色实现同一个接口。换句话说，真实目标角色可以只实现很小一部分的接口内容，接口的大部分内容可以放到代理角色中实现。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StaticProxy</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\">        WeddingCompany weddingCompany=<span class=\"keyword\">new</span> WeddingCompany(<span class=\"keyword\">new</span> You());</span><br><span class=\"line\">        weddingCompany.HappyMarry();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Marry</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 一些待实现接口</span></span><br><span class=\"line\">    <span class=\"comment\">// 结婚内容 1</span></span><br><span class=\"line\">    <span class=\"comment\">// 结婚内容 2</span></span><br><span class=\"line\">    <span class=\"comment\">// 结婚内容 3</span></span><br><span class=\"line\">    <span class=\"comment\">// 结婚内容 4</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">HappyMarry</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">You</span> <span class=\"keyword\">implements</span> <span class=\"title\">Marry</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">HappyMarry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 秦老师要结婚了，超开心 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 婚庆公司类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WeddingCompany</span> <span class=\"keyword\">implements</span> <span class=\"title\">Marry</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Marry target;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WeddingCompany</span><span class=\"params\">(Marry target)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.target=target;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">HappyMarry</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        before();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.target.HappyMarry();</span><br><span class=\"line\">        after();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">after</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 结婚之后，收尾款 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">before</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 结婚之前，布置现场 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 还可以实现 Marry 中的其他接口</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Lambda 表达式\"><a href=\"#Lambda 表达式\" class=\"headerlink\" title=\"Lambda 表达式\"></a>Lambda 表达式 </h2><p> 目的：避免匿名内部类定义过多。可以将几乎不常用 (比如只在一个地方用过一次) 的函数直接写成 lambda 函数。大体思想和 C++ 的 lambda 表达式相同。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 三种定义方式</span></span><br><span class=\"line\">(params)-&gt;expression[表达式]</span><br><span class=\"line\">(params)-&gt;statement[语句]</span><br><span class=\"line\">(params)-&gt;&#123;statements&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 例</span></span><br><span class=\"line\">a-&gt;System.out.println(<span class=\"string\">&quot;i like lambda --&gt;&quot;</span>+a);</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestLambda</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//3. 静态内部类</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Like2</span> <span class=\"keyword\">implements</span> <span class=\"title\">ILike</span></span>&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;i like lambda2&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ILike like=<span class=\"keyword\">new</span> Like();</span><br><span class=\"line\">        like.lambda();</span><br><span class=\"line\"></span><br><span class=\"line\">        like=<span class=\"keyword\">new</span> Like2();</span><br><span class=\"line\">        like.lambda();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4. 局部内部类</span></span><br><span class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Like3</span> <span class=\"keyword\">implements</span> <span class=\"title\">ILike</span></span>&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;i like lambda3&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        like=<span class=\"keyword\">new</span> Like3();</span><br><span class=\"line\">        like.lambda();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5. 匿名内部类, 通过接口声明</span></span><br><span class=\"line\">        like=<span class=\"keyword\">new</span> ILike() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;i like lambda4&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6. 用 lambda 简化</span></span><br><span class=\"line\">        like=()-&gt;&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;i like lambda5&quot;</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        like.lambda();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1. 定义一个函数式接口</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ILike</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2. 实现类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Like</span> <span class=\"keyword\">implements</span> <span class=\"title\">ILike</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">lambda</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;i like lambda&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注：</p>\n<ul>\n<li>函数式接口说明接口内只有一个待实现的方法，加入 ILike 中写了两个待实现方法，那么用 lambda 表达式就会报错。</li>\n<li>lambda 表达式中的参数可以不声明类型。</li>\n</ul>\n<h1 id=\"线程操作\"><a href=\"# 线程操作\" class=\"headerlink\" title=\"线程操作\"></a>线程操作 </h1><h2 id=\"Java 线程基本内容\"><a href=\"#Java 线程基本内容\" class=\"headerlink\" title=\"Java 线程基本内容\"></a>Java 线程基本内容</h2><p> 常见线程方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setPriority(<span class=\"keyword\">int</span> newPriority)  <span class=\"comment\">// 更改线程的优先级</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sleep</span><span class=\"params\">(<span class=\"keyword\">long</span> millis)</span>  <span class=\"comment\">// 指定毫秒内停止当前线程</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">join</span><span class=\"params\">()</span>  <span class=\"comment\">// 等待该线程终止</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">yield</span><span class=\"params\">()</span>  <span class=\"comment\">// 暂停当前正在执行的线程对象，并执行其他线程</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">interrupt</span><span class=\"params\">()</span>  <span class=\"comment\">// 中断线程</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">isAlive</span><span class=\"params\">()</span>  <span class=\"comment\">// 测试线程是否处于活动状态</span></span></span><br></pre></td></tr></table></figure>\n\n<p>线程状态常量  –&gt;Thread.State. 常量：</p>\n<ul>\n<li><code>NEW</code>：尚未启动的线程</li>\n<li><code>RUNNABLE</code>:  在 Java 虚拟机中处于就绪态的线程</li>\n<li><code>BLOCKED</code>:  线程处于阻塞态</li>\n<li><code>WAITING</code>:  线程正在等待另一个线程执行特定动作</li>\n<li><code>TIMED_WAITING</code>：正在等待另一个线程执行动作达到指定等待时间的线程</li>\n<li><code>TERMINATED</code>：结束态</li>\n</ul>\n<h2 id=\"线程停止\"><a href=\"# 线程停止\" class=\"headerlink\" title=\"线程停止\"></a>线程停止</h2><ul>\n<li>建议线程正常停止。不建议死循环。</li>\n<li>建议使用自定义的标志位，用于判断线程是否停止</li>\n<li>不要使用 stop()或 destory()等 JDK 已不建议使用的方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestStop</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 设置一个标志位</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> flag=<span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(flag)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;run......Thread&quot;</span>+i++);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 设置一个公开的方法停止线程，转换标志位</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.flag=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        TestStop testStop=<span class=\"keyword\">new</span> TestStop();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(testStop).start();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">1000</span>;i++)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 测试 &quot;</span>+i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i==<span class=\"number\">900</span>)&#123;</span><br><span class=\"line\">                testStop.stop();</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot; 线程强制停止 &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/0ef97546f36b4129b02457ecb059114c.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"线程休眠\"><a href=\"# 线程休眠\" class=\"headerlink\" title=\"线程休眠\"></a>线程休眠</h2><ul>\n<li>sleep 存在异常 InterruptedException</li>\n<li>sleep 事件结束后线程进入就绪态</li>\n<li>每个对象都有一个锁，sleep 不会释放锁</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 模拟网络延时</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestSleep</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">turnDown</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num=<span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">            System.out.println(num--);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num&lt;=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Date startTime=<span class=\"keyword\">new</span> Date(System.currentTimeMillis());<span class=\"comment\">// 获取系统当前时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">&quot;HH:mm:ss&quot;</span>).format(startTime));</span><br><span class=\"line\">                startTime=<span class=\"keyword\">new</span> Date(System.currentTimeMillis());<span class=\"comment\">// 更新当前时间</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/0af4b466fdbb416595bab74e62212832.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"线程礼让\"><a href=\"# 线程礼让\" class=\"headerlink\" title=\"线程礼让\"></a>线程礼让 </h2><p> 目的：让当前正在执行的线程暂停，但不进入阻塞态。这个过程不一定成功。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestYield</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        MyYield myYield=<span class=\"keyword\">new</span> MyYield();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(myYield,<span class=\"string\">&quot;a&quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(myYield,<span class=\"string\">&quot;b&quot;</span>).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyYield</span> <span class=\"keyword\">implements</span>  <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot; 线程开始执行 &quot;</span>);</span><br><span class=\"line\">        Thread.yield();<span class=\"comment\">// 礼让</span></span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot; 线程停止执行 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/ef6845c28e94490680668054f2fa6650.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"线程强制执行\"><a href=\"# 线程强制执行\" class=\"headerlink\" title=\"线程强制执行\"></a>线程强制执行</h2><p>join()</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestJoin</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">1000</span>;i++)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 线程 vip 来了 &quot;</span>+i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 启动线程</span></span><br><span class=\"line\">        TestJoin testJoin=<span class=\"keyword\">new</span> TestJoin();</span><br><span class=\"line\">        Thread thread=<span class=\"keyword\">new</span> Thread(testJoin);</span><br><span class=\"line\">        thread.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 主线程</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">500</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i==<span class=\"number\">200</span>)&#123;  <span class=\"comment\">//i==200 是有一个 vip 线程插队</span></span><br><span class=\"line\">                thread.join();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;main&quot;</span>+i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/e3c05f399ca04b38a26ed4e8ef93d870.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"线程优先级\"><a href=\"# 线程优先级\" class=\"headerlink\" title=\"线程优先级\"></a>线程优先级 </h2><p> 优先级用数字表示：1~10</p>\n<ul>\n<li>Thread.MIN_PRIOTITY=1;</li>\n<li>Thread.MAX_PRIOTITY=10;   // 最高优先级</li>\n<li>Thread.NORM_PRIOTITY=5;</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getPriority()   <span class=\"comment\">// 获取优先级 </span></span><br><span class=\"line\">setPriority(<span class=\"keyword\">int</span> x)  <span class=\"comment\">// 在线程启动前 设置优先级</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"守护 -daemon- 线程\"><a href=\"# 守护 -daemon- 线程\" class=\"headerlink\" title=\"守护 (daemon) 线程\"></a>守护 (daemon) 线程</h2><ul>\n<li>线程分为用户线程和守护线程</li>\n<li>JVM 必须确保用户线程执行完毕  如 main()函数</li>\n<li>JVM 不用等待守护线程执行完毕</li>\n<li>例：后台记录操作日志，监控内存，垃圾回收……</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestDaemon</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        God god = <span class=\"keyword\">new</span> God();</span><br><span class=\"line\">        You you = <span class=\"keyword\">new</span> You();</span><br><span class=\"line\"></span><br><span class=\"line\">        Thread thread = <span class=\"keyword\">new</span> Thread(god);</span><br><span class=\"line\">        thread.setDaemon(<span class=\"keyword\">true</span>);  <span class=\"comment\">// 默认为 false</span></span><br><span class=\"line\">        thread.start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(you).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 上帝类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">God</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 上帝保佑着你 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 人类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">You</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">36500</span>;i++)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 你的一生都开心地活着 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;==========goodbye  world!=============&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/8ca4f159d8bf4c8ab97d5b9916939eb2.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"线程同步\"><a href=\"# 线程同步\" class=\"headerlink\" title=\"线程同步\"></a>线程同步 </h1><p> 目的：多个线程操作同一个资源。如抢票系统</p>\n<p>主要思想：队列 + 锁(确保安全)。<br>        处理多线程问题时，多个线程访问同一个对象，并且某些线程还想修改这个对象。这时候我们就需要线程同步，线程同步其实就是一种等待机制，多个需要同时访问次对象的线程进入这个对象的等待吃形成队列，等待前面线程是哟弄个完毕，下一个线程在使用。</p>\n<p>锁机制：为了保证数据在方法中被访问时的正确性，在访问时加入 <code> 锁机制：synchronized</code>。当一个线程获得对象的排他锁，就可以独占资源，其他线程必须等待，使用完后可以释放锁。</p>\n<ul>\n<li>一个线程持有锁会导致其他所有需要此锁的线程挂起</li>\n<li>在多线程竞争下，加锁、释放锁会导致比较多的 <u> 上下文切换和调度延时</u>，导致性能问题</li>\n<li>如果一个优先级高的线程等待一个优先级低的线程释放锁，会导致优先级倒置，引起性能问题</li>\n</ul>\n<h2 id=\"三大不安全案例\"><a href=\"# 三大不安全案例\" class=\"headerlink\" title=\"三大不安全案例\"></a>三大不安全案例 </h2><h3 id=\"抢票系统\"><a href=\"# 抢票系统\" class=\"headerlink\" title=\"抢票系统\"></a> 抢票系统</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnsafeBuyTicket</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        BuyTicket buyTicket = <span class=\"keyword\">new</span> BuyTicket();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(buyTicket,<span class=\"string\">&quot; 张三 &quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(buyTicket,<span class=\"string\">&quot; 李四 &quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(buyTicket,<span class=\"string\">&quot; 黄牛 &quot;</span>).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BuyTicket</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 票</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> ticketNums=<span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> flag=<span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(flag)&#123;</span><br><span class=\"line\">            buy();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">buy</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 判断是否有票</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ticketNums&lt;=<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            flag=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 模拟延时</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 买票</span></span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot; 拿到了 &quot;</span>+ticketNums--);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/6d3237dc79ff4a32a36f77e81806c702.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p>线程操作资源时没有上锁，导致线程不安全。</p>\n<h3 id=\"银行取钱\"><a href=\"# 银行取钱\" class=\"headerlink\" title=\"银行取钱\"></a>银行取钱</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnsafeBank</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Account account=<span class=\"keyword\">new</span> Account(<span class=\"number\">100</span>,<span class=\"string\">&quot; 基金 &quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Drawing you=<span class=\"keyword\">new</span> Drawing(account,<span class=\"number\">50</span>,<span class=\"string\">&quot; 你 &quot;</span>);</span><br><span class=\"line\">        Drawing friend=<span class=\"keyword\">new</span> Drawing(account,<span class=\"number\">100</span>,<span class=\"string\">&quot;friend&quot;</span>);</span><br><span class=\"line\">        you.start();</span><br><span class=\"line\">        friend.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 账户</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Account</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> money;  <span class=\"comment\">// 余额</span></span><br><span class=\"line\">    String name; <span class=\"comment\">// 卡号</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Account</span><span class=\"params\">(<span class=\"keyword\">int</span> money, String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.money = money;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 银行  模拟取款</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Drawing</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    Account account;</span><br><span class=\"line\">    <span class=\"comment\">// 取了多少钱</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> drawingMoney;</span><br><span class=\"line\">    <span class=\"comment\">// 现在手里由多少钱</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> nowMoney;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Drawing</span><span class=\"params\">(Account account, <span class=\"keyword\">int</span> drawingMoney,String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(name);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.account = account;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.drawingMoney = drawingMoney;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 取钱</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 判断有没有钱</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(account.money-drawingMoney&lt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            System.out.println(Thread.currentThread().getName()+<span class=\"string\">&quot; 余额不足 &quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 更新余额与现金</span></span><br><span class=\"line\">        account.money-=drawingMoney;</span><br><span class=\"line\">        nowMoney+=drawingMoney;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(account.name+<span class=\"string\">&quot; 余额为：&quot;</span>+account.money);</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">this</span>.getName()+<span class=\"string\">&quot; 现金：&quot;</span>+nowMoney);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/c2864545c80345d1af4ddd1f759b4a82.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"线程安全\"><a href=\"# 线程安全\" class=\"headerlink\" title=\"线程安全\"></a>线程安全</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnsafeList</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;String&gt; list =<span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(()-&gt;&#123;</span><br><span class=\"line\">                list.add(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">3000</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(list.size());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/33be83adbf264fdcbaa6dfe6cd344049.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"同步方法\"><a href=\"# 同步方法\" class=\"headerlink\" title=\"同步方法\"></a>同步方法 </h2><p><code>synchronized</code> 关键字</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">(...)</span></span>&#123;...&#125;</span><br></pre></td></tr></table></figure>\n\n<p>synchronized 修饰的方法必须先获得调用该方法对象的锁后才能执行，否则线程会阻塞。</p>\n<h3 id=\"抢票系统 -1\"><a href=\"# 抢票系统 -1\" class=\"headerlink\" title=\"抢票系统\"></a>抢票系统</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnsafeBuyTicket</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        BuyTicket buyTicket = <span class=\"keyword\">new</span> BuyTicket();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(buyTicket,<span class=\"string\">&quot; 张三 &quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(buyTicket,<span class=\"string\">&quot; 李四 &quot;</span>).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(buyTicket,<span class=\"string\">&quot; 黄牛 &quot;</span>).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BuyTicket</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//......</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 对 this 加锁</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">buy</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//......</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/0e7fb8d1ce1f426caaad232850b77251.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"银行取钱 -1\"><a href=\"# 银行取钱 -1\" class=\"headerlink\" title=\"银行取钱\"></a>银行取钱</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnsafeBank</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Account account=<span class=\"keyword\">new</span> Account(<span class=\"number\">100</span>,<span class=\"string\">&quot; 基金 &quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Drawing you=<span class=\"keyword\">new</span> Drawing(account,<span class=\"number\">50</span>,<span class=\"string\">&quot; 你 &quot;</span>);</span><br><span class=\"line\">        Drawing friend=<span class=\"keyword\">new</span> Drawing(account,<span class=\"number\">100</span>,<span class=\"string\">&quot;friend&quot;</span>);</span><br><span class=\"line\">        you.start();</span><br><span class=\"line\">        friend.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 账户</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Account</span></span>&#123;...&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 银行  模拟取款</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Drawing</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//......</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 取钱</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 通过 synchronized 块对 account 上锁。默认上锁 this</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span>(account)&#123;</span><br><span class=\"line\">           <span class=\"comment\">// 源码套上 synchronized 块</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/d9719351adaa4fccbcf35efbf05ee113.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"线程安全 -1\"><a href=\"# 线程安全 -1\" class=\"headerlink\" title=\"线程安全\"></a>线程安全</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnsafeList</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;String&gt; list =<span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(()-&gt;&#123;</span><br><span class=\"line\">                <span class=\"keyword\">synchronized</span> (list)&#123;</span><br><span class=\"line\">                    list.add(Thread.currentThread().getName());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">3000</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(list.size());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/e1ae6e14a6df47b390f6532769914459.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>也可以使用现成的 JUC 安全类型集合</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.CopyOnWriteArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestJUC</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        CopyOnWriteArrayList&lt;String&gt; list=<span class=\"keyword\">new</span> CopyOnWriteArrayList&lt;String&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">new</span> Thread(()-&gt;&#123;</span><br><span class=\"line\">                list.add(Thread.currentThread().getName());</span><br><span class=\"line\">            &#125;).start();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">3000</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(list.size());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"锁\"><a href=\"# 锁\" class=\"headerlink\" title=\"锁\"></a>锁 </h1><h2 id=\"死锁\"><a href=\"# 死锁\" class=\"headerlink\" title=\"死锁\"></a> 死锁 </h2><p> 产生死锁的四个必要条件：</p>\n<ol>\n<li>互斥条件：一个资源每次只能被一个进程使用。</li>\n<li>请求余保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放。</li>\n<li>不剥夺条件：进程已获得的资源，在未使用完之前，不能强行剥夺。</li>\n<li>循环等待条件：若干进程之间形成一种头尾相接的循环等待资源关系</li>\n</ol>\n<p>化妆案例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DeadDock</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Makeup g1=<span class=\"keyword\">new</span> Makeup(<span class=\"number\">0</span>,<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">        Makeup g2=<span class=\"keyword\">new</span> Makeup(<span class=\"number\">1</span>,<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        g1.start();</span><br><span class=\"line\">        g2.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 口红</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Lipstick</span></span>&#123; &#125;</span><br><span class=\"line\"><span class=\"comment\">// 镜子</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mirror</span></span>&#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Makeup</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 需要的资源都只有一份</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Lipstick lipstick=<span class=\"keyword\">new</span> Lipstick();</span><br><span class=\"line\">    <span class=\"keyword\">static</span> Mirror mirror=<span class=\"keyword\">new</span> Mirror();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> choice;</span><br><span class=\"line\">    String girlName;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Makeup</span><span class=\"params\">(<span class=\"keyword\">int</span> choice, String girlName)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.choice = choice;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.girlName = girlName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            makeup();<span class=\"comment\">// 化妆</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 化妆，一个人有口红，另一个人有镜子。双方都需要对方的资源</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">makeup</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (lipstick) &#123;  <span class=\"comment\">// 获得口红的锁</span></span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">this</span>.girlName + <span class=\"string\">&quot; 获得了口红的锁 &quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//1s 后，想获得镜子的锁</span></span><br><span class=\"line\">                <span class=\"keyword\">synchronized</span> (mirror) &#123;  <span class=\"comment\">// 获得镜子的锁</span></span><br><span class=\"line\">                    System.out.println(<span class=\"keyword\">this</span>.girlName + <span class=\"string\">&quot; 获得了镜子的锁 &quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (mirror) &#123;  <span class=\"comment\">// 获得镜子的锁</span></span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">this</span>.girlName + <span class=\"string\">&quot; 获得了镜子的锁 &quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//1s 后，想获得口红的锁</span></span><br><span class=\"line\">                <span class=\"keyword\">synchronized</span> (lipstick) &#123;  <span class=\"comment\">// 获得口红的锁</span></span><br><span class=\"line\">                    System.out.println(<span class=\"keyword\">this</span>.girlName + <span class=\"string\">&quot; 获得了口红的锁 &quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/116808f2d4a84fba9b6c7cd6e970d2d8.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p>修改代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DeadDock</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Makeup g1=<span class=\"keyword\">new</span> Makeup(<span class=\"number\">0</span>,<span class=\"string\">&quot;A&quot;</span>);</span><br><span class=\"line\">        Makeup g2=<span class=\"keyword\">new</span> Makeup(<span class=\"number\">1</span>,<span class=\"string\">&quot;B&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        g1.start();</span><br><span class=\"line\">        g2.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 口红</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Lipstick</span></span>&#123; &#125;</span><br><span class=\"line\"><span class=\"comment\">// 镜子</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mirror</span></span>&#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Makeup</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//......</span></span><br><span class=\"line\">    <span class=\"comment\">// 化妆，一个人有口红，另一个人有镜子。双方都需要对方的资源</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">makeup</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (choice == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (lipstick) &#123;  <span class=\"comment\">// 获得口红的锁</span></span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">this</span>.girlName + <span class=\"string\">&quot; 获得了口红的锁 &quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">//1s 后，想获得镜子的锁</span></span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (mirror) &#123;  <span class=\"comment\">// 获得镜子的锁</span></span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">this</span>.girlName + <span class=\"string\">&quot; 获得了镜子的锁 &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (mirror) &#123;  <span class=\"comment\">// 获得镜子的锁</span></span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">this</span>.girlName + <span class=\"string\">&quot; 获得了镜子的锁 &quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    Thread.sleep(<span class=\"number\">2000</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">//1s 后，想获得口红的锁</span></span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (lipstick) &#123;  <span class=\"comment\">// 获得口红的锁</span></span><br><span class=\"line\">                System.out.println(<span class=\"keyword\">this</span>.girlName + <span class=\"string\">&quot; 获得了口红的锁 &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/fc0e9ae6b3d0487d83aa3a375e43aee4.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"Lock 锁 -JDK\"><a href=\"#Lock 锁 -JDK\" class=\"headerlink\" title=\"Lock 锁(JDK)\"></a>Lock 锁(JDK)</h2><p>java.util.concurrent.locks.Lock 接口时控制多个线程对共享资源进行访问的工具。锁提供了对共享资源的独占访问，每次只能有一个线程对 Lock 对象枷锁，线程开始访问共享资源之前应先获得的 Lock 对象。</p>\n<p>ReentrantLock 类 (可重入锁) 实现了 Lock，它拥有与 synchronized 相同的并发性和内存语义，在实现线程安全的控制中，比较常用的是 ReentrantLock，可以显示加锁、释放锁。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抢票模拟</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestLock</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        TestLock2 testLock2 = <span class=\"keyword\">new</span> TestLock2();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(testLock2).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(testLock2).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Thread(testLock2).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestLock2</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> ticketNums=<span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定义 lock 锁。默认对 this 上锁</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"keyword\">final</span> ReentrantLock lock=<span class=\"keyword\">new</span> ReentrantLock();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                lock.lock();  <span class=\"comment\">// 显式加锁</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(ticketNums&gt;=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    System.out.println(ticketNums--);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                lock.unlock(); <span class=\"comment\">// 显式解锁</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/32ea06e8b11f4800b1398fbb06043e33.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p><code>sychronized</code> 和 <code>Lock</code> 对比：</p>\n<ul>\n<li>Lock 式显式锁。sychronized 是隐式锁。后者加锁、释放锁自动完成。</li>\n<li>Lock 只有代码块锁。sychronized 有代码块所和方法锁。</li>\n<li>使用 Lock 锁，JVM 将花费较少的时间来调度线程，性能更好。并且具有更好的扩展性(提供更多的子类)</li>\n<li>优先使用顺序：Lock&gt; 同步代码块 &gt; 同步方法</li>\n</ul>\n<h1 id=\"线程通信\"><a href=\"# 线程通信\" class=\"headerlink\" title=\"线程通信\"></a>线程通信 </h1><h2 id=\"生产者、消费者问题\"><a href=\"# 生产者、消费者问题\" class=\"headerlink\" title=\"生产者、消费者问题\"></a> 生产者、消费者问题 </h2><p> 前提：</p>\n<ul>\n<li>假设仓库中只能存放一件产品，生产者将生产出来的产品放入仓库，消费者将仓库中的产品取走消费。</li>\n<li>如果仓库中没有产品，则生产者将产品放入仓库，否则停止生产并等待，知道仓库中的产品被消费者取走为止。</li>\n<li>如果仓库中放有产品，则消费者可以将产品取走消费，否则停止消费并等待，知道仓库中再次放入产品为止。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/fbfa55df92d34c8a94cac65e3ea7c450.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p>该问题中，生产者和消费者之间相互依赖，互为条件：</p>\n<ol>\n<li></li>\n</ol>\n<ul>\n<li>对于生产者，没有生产产品之前，要通知消费者等待。生产了产品之后，有需要马上通知消费者消费。</li>\n<li>对于消费者，在消费之后，要通知生产者已经结束消费，需要生产新的产品以供消费。</li>\n<li>该问题中，只用 <code>synchronized</code> 是不够的。1.<code>synchronized</code>可以组织并发更新同一个共享资源，实现了同步。 2.<code>synchronized</code>不能用来实现不同线程之间的消息传递(通信)</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 线程通信相关的 java 方法 </span></span><br><span class=\"line\">wait()  <span class=\"comment\">// 表示线程已知等待，知道其他线程通知，与 sleep 不同，会释放锁</span></span><br><span class=\"line\">wait(<span class=\"keyword\">long</span> timeout)  <span class=\"comment\">// 指定等待的毫秒数</span></span><br><span class=\"line\">notify()  <span class=\"comment\">// 唤醒一个处于等待状态的线程</span></span><br><span class=\"line\">notifyAll()  <span class=\"comment\">// 唤醒同一个对象上所有调用 wait() 方法的线程，优先级高的线程优先</span></span><br></pre></td></tr></table></figure>\n\n<p>注：以上均为 Object 类的方法，都只能在同步方法或同步代码块中使用，否则会抛出异常<code>IllegalMonitorStateException</code></p>\n<h2 id=\"解决方式\"><a href=\"# 解决方式\" class=\"headerlink\" title=\"解决方式\"></a>解决方式 </h2><h3 id=\"管程法\"><a href=\"# 管程法\" class=\"headerlink\" title=\"管程法\"></a> 管程法</h3><ul>\n<li>生产者：负责生产数据的模块(可能是方法，对象，线程，进程)；</li>\n<li>消费者：负责处理数据的模块(可能是方法，对象，线程，进程)；</li>\n<li>缓冲区：消费者不能直接使用生产者的数据。他们之间有一个缓冲区；</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 需要的类：生产者、消费者、产品、缓冲区</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestPC</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SynContainer container=<span class=\"keyword\">new</span> SynContainer();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">new</span> Productor(container).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Consumer(container).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 生产者</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Productor</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    SynContainer container;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Productor</span><span class=\"params\">(SynContainer container)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.container=container;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 生产</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)&#123;</span><br><span class=\"line\">            container.push(<span class=\"keyword\">new</span> Chicken(i));</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 生产了 &quot;</span>+i+<span class=\"string\">&quot; 只鸡 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 消费者</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Consumer</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    SynContainer container;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Consumer</span><span class=\"params\">(SynContainer container)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.container=container;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 消费</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 消费了 --&gt;&quot;</span>+container.pop().id+<span class=\"string\">&quot; 只鸡 &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Chicken</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> id; <span class=\"comment\">// 产品编号</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Chicken</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 缓冲区</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SynContainer</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 仓库大小</span></span><br><span class=\"line\">    Chicken[] chickens=<span class=\"keyword\">new</span> Chicken[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 当前容器已用大小</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 生产者放入产品</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(Chicken chicken)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果容器满了，就需要等待消费者消费</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(count==chickens.length)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 通知消费者消费，生产者等待</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.wait();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果容器没有满，则放入产品</span></span><br><span class=\"line\">        chickens[count]=chicken;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 通知消费者消费</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.notifyAll();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 消费者取出产品</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> Chicken <span class=\"title\">pop</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 判断能否消费</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(count==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 等待生产者生产，消费者等待</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.wait();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 可以消费</span></span><br><span class=\"line\">        count--;</span><br><span class=\"line\">        Chicken chicken=chickens[count];</span><br><span class=\"line\">        <span class=\"comment\">// 通知生产者生产</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.notifyAll();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> chicken;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/58b35963a65943b79d273a51a71ddc24.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"信号灯法\"><a href=\"# 信号灯法\" class=\"headerlink\" title=\"信号灯法\"></a>信号灯法</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 需要的类：生产者、消费者、产品、缓冲区</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestPC</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        TV tv = <span class=\"keyword\">new</span> TV();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Player(tv).start();</span><br><span class=\"line\">        <span class=\"keyword\">new</span> Watcher(tv).start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 生产者 --&gt; 演员</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Player</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    TV tv;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Player</span><span class=\"params\">(TV tv)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.tv = tv;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.tv.play(<span class=\"string\">&quot; 节目 A 播放中 &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.tv.play(<span class=\"string\">&quot; 节目 B 播放中 &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 消费者 --&gt; 观众</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Watcher</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</span><br><span class=\"line\">    TV tv;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Watcher</span><span class=\"params\">(TV tv)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.tv = tv;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">20</span>;i++)&#123;</span><br><span class=\"line\">            tv.watch();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品 --&gt; 节目</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TV</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 演员表演，观众等待 T</span></span><br><span class=\"line\">    <span class=\"comment\">// 观众观看，演员等待 F</span></span><br><span class=\"line\">    String voice; <span class=\"comment\">// 节目</span></span><br><span class=\"line\">    <span class=\"keyword\">boolean</span> flag=<span class=\"keyword\">true</span>;  <span class=\"comment\">// 标志位</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 表演</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">play</span><span class=\"params\">(String voice)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!flag)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.wait();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 演员表演了：&quot;</span>+voice);</span><br><span class=\"line\">        <span class=\"comment\">// 通知观众观看</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.notifyAll();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.voice=voice;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.flag=!<span class=\"keyword\">this</span>.flag;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 观看</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> <span class=\"keyword\">void</span> <span class=\"title\">watch</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.wait();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 观看了：&quot;</span>+voice);</span><br><span class=\"line\">        <span class=\"comment\">// 通知演员表演</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.notifyAll();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.flag=!<span class=\"keyword\">this</span>.flag;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/f6a2772fde1e42ec8756b7058f3b7330.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"线程池\"><a href=\"# 线程池\" class=\"headerlink\" title=\"线程池\"></a>线程池 </h1><p> 背景：经常创建和销毁、使用特别大的资源，比如并发情况下的线程，对性能影响很大。</p>\n<p>思路：提前创建多个线程，放入线程池中，使用时直接获取，食用含放回池中。这样可以避免频繁创建销毁、实现重复利用。如显示生活中的公交车。</p>\n<p>优点：</p>\n<ul>\n<li>提高相应速度(减少了创建新线程的时间)</li>\n<li>降低资源消耗(重复利用线程池中的线程，不需要每次都创建)</li>\n<li>便于线程管理（核心池大小、最大线程数、线程没有任务时最多保持多长时间后会终止……）</li>\n</ul>\n<p>JDK5.0 起提供了线程池相关 API：<code>ExecutorService</code>和<code>Executors</code></p>\n<p>ExecutorService: 真正的线程池接口。常见子类 ThreadPoolExecutor</p>\n<ul>\n<li><code>void execute(Runnable command)</code>: 执行任务 / 命令，没有返回值，一般用来执行 Runnable</li>\n<li><code>&lt;T&gt;Future&lt;T&gt;submmit(Callable&lt;T&gt;task)</code>: 执行任务，有返回值，一般用来执行 Callable</li>\n<li><code>void shutdown()</code>：关闭线程池</li>\n</ul>\n<p>Executors：工具类、线程池的工具类，用于创建并返回不同类型的线程池。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Multics;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Executor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutorService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Executors;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestPool</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 创建服务，创建线程池</span></span><br><span class=\"line\">        <span class=\"comment\">// 参数为线程池大小</span></span><br><span class=\"line\">        ExecutorService service= Executors.newFixedThreadPool(<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 执行</span></span><br><span class=\"line\">        service.execute(<span class=\"keyword\">new</span> MyThread());</span><br><span class=\"line\">        service.execute(<span class=\"keyword\">new</span> MyThread());</span><br><span class=\"line\">        service.execute(<span class=\"keyword\">new</span> MyThread());</span><br><span class=\"line\">        service.execute(<span class=\"keyword\">new</span> MyThread());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 关闭连接</span></span><br><span class=\"line\">        service.shutdown();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyThread</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(Thread.currentThread().getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/5fded5f57c9443b59b4c58dae67076d2.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n","url":"/posts/24112/","min2read":31,"word4post":"6.5k","prev_post":{"title":"Java 注解与反射","url":"/posts/12475/"},"next_post":{"title":"Java 网络编程基础","url":"/posts/9017/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"Java 多线程\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">Java 多线程 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"线程创建\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">线程创建 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"创建 Thread\" href = \"#\"><span class=\"toc-number\">2.1.</span> <span class=\"toc-text\">创建 Thread</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"多线程网图下载\" href = \"#\"><span class=\"toc-number\">2.2.</span> <span class=\"toc-text\">多线程网图下载 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"实现 Runnable 接口\" href = \"#\"><span class=\"toc-number\">2.3.</span> <span class=\"toc-text\">实现 Runnable 接口</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"实现 Callable 接口（次要）\" href = \"#\"><span class=\"toc-number\">2.4.</span> <span class=\"toc-text\">实现 Callable 接口（次要）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"例子：购买火车票\" href = \"#\"><span class=\"toc-number\">2.5.</span> <span class=\"toc-text\">例子：购买火车票 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"例子：龟兔赛跑\" href = \"#\"><span class=\"toc-number\">2.6.</span> <span class=\"toc-text\">例子：龟兔赛跑</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"静态代理模式\" href = \"#\"><span class=\"toc-number\">2.7.</span> <span class=\"toc-text\">静态代理模式 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Lambda 表达式\" href = \"#\"><span class=\"toc-number\">2.8.</span> <span class=\"toc-text\">Lambda 表达式 </span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"线程操作\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">线程操作 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Java 线程基本内容\" href = \"#\"><span class=\"toc-number\">3.1.</span> <span class=\"toc-text\">Java 线程基本内容</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"线程停止\" href = \"#\"><span class=\"toc-number\">3.2.</span> <span class=\"toc-text\">线程停止</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"线程休眠\" href = \"#\"><span class=\"toc-number\">3.3.</span> <span class=\"toc-text\">线程休眠</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"线程礼让\" href = \"#\"><span class=\"toc-number\">3.4.</span> <span class=\"toc-text\">线程礼让 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"线程强制执行\" href = \"#\"><span class=\"toc-number\">3.5.</span> <span class=\"toc-text\">线程强制执行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"线程优先级\" href = \"#\"><span class=\"toc-number\">3.6.</span> <span class=\"toc-text\">线程优先级 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"守护 -daemon- 线程\" href = \"#\"><span class=\"toc-number\">3.7.</span> <span class=\"toc-text\">守护 (daemon) 线程</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"线程同步\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">线程同步 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"三大不安全案例\" href = \"#\"><span class=\"toc-number\">4.1.</span> <span class=\"toc-text\">三大不安全案例 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"抢票系统\" href = \"#\"><span class=\"toc-number\">4.1.1.</span> <span class=\"toc-text\"> 抢票系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"银行取钱\" href = \"#\"><span class=\"toc-number\">4.1.2.</span> <span class=\"toc-text\">银行取钱</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"线程安全\" href = \"#\"><span class=\"toc-number\">4.1.3.</span> <span class=\"toc-text\">线程安全</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"同步方法\" href = \"#\"><span class=\"toc-number\">4.2.</span> <span class=\"toc-text\">同步方法 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"抢票系统 -1\" href = \"#\"><span class=\"toc-number\">4.2.1.</span> <span class=\"toc-text\">抢票系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"银行取钱 -1\" href = \"#\"><span class=\"toc-number\">4.2.2.</span> <span class=\"toc-text\">银行取钱</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"线程安全 -1\" href = \"#\"><span class=\"toc-number\">4.2.3.</span> <span class=\"toc-text\">线程安全</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"锁\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\">锁 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"死锁\" href = \"#\"><span class=\"toc-number\">5.1.</span> <span class=\"toc-text\"> 死锁 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"Lock 锁 -JDK\" href = \"#\"><span class=\"toc-number\">5.2.</span> <span class=\"toc-text\">Lock 锁(JDK)</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"线程通信\" href = \"#\"><span class=\"toc-number\">6.</span> <span class=\"toc-text\">线程通信 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"生产者、消费者问题\" href = \"#\"><span class=\"toc-number\">6.1.</span> <span class=\"toc-text\"> 生产者、消费者问题 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"解决方式\" href = \"#\"><span class=\"toc-number\">6.2.</span> <span class=\"toc-text\">解决方式 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"管程法\" href = \"#\"><span class=\"toc-number\">6.2.1.</span> <span class=\"toc-text\"> 管程法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"信号灯法\" href = \"#\"><span class=\"toc-number\">6.2.2.</span> <span class=\"toc-text\">信号灯法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"线程池\" href = \"#\"><span class=\"toc-number\">7.</span> <span class=\"toc-text\">线程池 </span></a></li></ol>","categories":[],"tags":[{"name":"JavaSE","path":"api/tags/JavaSE.json","url":"/tags/JavaSE/"}]}