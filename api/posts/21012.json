{"title":"Java IO 框架","slug":"JavaIO框架","date":"2022-01-13","updated":"2022-01-31","comments":true,"path":"api/posts/21012.json","excerpt":null,"cover":"https://img-blog.csdnimg.cn/7ee8c866c9184462ab92862a12962d32.png?x-oss-process=image","covers":["https://img-blog.csdnimg.cn/7ee8c866c9184462ab92862a12962d32.png?x-oss-process=image","https://img-blog.csdnimg.cn/9e373aed346e4c7f859f053b587239b6.png#pic_center","https://img-blog.csdnimg.cn/3a9fd10be1de42dc8ec1bf9a0a70c9fb.png?x-oss-process=image","https://img-blog.csdnimg.cn/3cb6d0b60f844413b46ec08f0b5cf33e.png?x-oss-process=image","https://img-blog.csdnimg.cn/8619b7f92f80487cbda54704fe6616cf.png?x-oss-process=image","https://img-blog.csdnimg.cn/a88741b9e9534f258575d8614c756059.png?x-oss-process=image","https://img-blog.csdnimg.cn/06c5a95703fc496cb9ed29ab755851b6.png#pic_center","https://img-blog.csdnimg.cn/1a5bb951a0e44dfd9b3e56dc05de23cc.png?x-oss-process=image","https://img-blog.csdnimg.cn/3ab1b910d309406b8ec8ec4ec7dc56b5.png?x-oss-process=image","https://img-blog.csdnimg.cn/c7349f86f9824d8bb3d33aa03928b373.png?x-oss-process=image","https://img-blog.csdnimg.cn/31aba701076d4ee4ac1f5f75c9938b68.png?x-oss-process=image","https://img-blog.csdnimg.cn/94f8cc230bc84e5f8fd8f88df7559192.png?x-oss-process=imager","https://img-blog.csdnimg.cn/02f853b7f45b471a9fb65bc55df50abc.png?x-oss-process=image","https://img-blog.csdnimg.cn/6d6bd8d0d22a404a8b4f4fdc3252c552.png#pic_center","https://img-blog.csdnimg.cn/ceb4f3c0cd9740e9b4516400fd707dca.png#pic_center","https://img-blog.csdnimg.cn/518f0291d72b4997a64ec76d2e50ee4d.png?x-oss-process=image"],"content":"<h1 id=\"Java-IO 框架\"><a href=\"#Java-IO 框架\" class=\"headerlink\" title=\"Java IO 框架\"></a>Java IO 框架 </h1><p> 参考视频: BV1Tz4y1X7H7<br>CSDN:<a href=\"https://blog.csdn.net/INFINITE_WAR/article/details/122483591\">https://blog.csdn.net/INFINITE_WAR/article/details/122483591</a></p>\n<h1 id=\"流的概念\"><a href=\"# 流的概念\" class=\"headerlink\" title=\"流的概念\"></a>流的概念 </h1><p> 流的定义：内存与存储设备之间传输数据的通道</p>\n<p><img src=\"https://img-blog.csdnimg.cn/7ee8c866c9184462ab92862a12962d32.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"流的分类\"><a href=\"# 流的分类\" class=\"headerlink\" title=\"流的分类\"></a>流的分类</h1><blockquote>\n<p>按方向</p>\n</blockquote>\n<p><strong>输入流</strong>：将存储设备中的内容读入到内存中。</p>\n<p><strong>输出流</strong>：将内存中的内容写入到存储设备中。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9e373aed346e4c7f859f053b587239b6.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>按单位</p>\n</blockquote>\n<p><strong>字节流</strong>：以字节为单位，可以读写所有数据。</p>\n<p><strong>字符流</strong>：以字符为单位，只能读写文本数据。</p>\n<blockquote>\n<p>按功能</p>\n</blockquote>\n<p><strong>字节流</strong>：具有实际传输数据的读写功能。</p>\n<p><strong>过滤流</strong>：在节点流的基础之上增强功能。</p>\n<h1 id=\"字节流\"><a href=\"# 字节流\" class=\"headerlink\" title=\"字节流\"></a>字节流 </h1><h2 id=\"继承关系\"><a href=\"# 继承关系\" class=\"headerlink\" title=\"继承关系\"></a> 继承关系 </h2><p> 输入流继承关系</p>\n<p><img src=\"https://img-blog.csdnimg.cn/3a9fd10be1de42dc8ec1bf9a0a70c9fb.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p>输出流继承关系</p>\n<p><img src=\"https://img-blog.csdnimg.cn/3cb6d0b60f844413b46ec08f0b5cf33e.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"字节流的抽象父类\"><a href=\"# 字节流的抽象父类\" class=\"headerlink\" title=\"字节流的抽象父类\"></a>字节流的抽象父类</h2><p>InputStream</p>\n<p>字节输入流</p>\n<ul>\n<li><code>public int read()&#123;&#125;</code></li>\n<li><code>public int read(byte[] b)&#123;&#125;</code></li>\n<li><code>public int read(byte[] b,int off,int len)&#123;&#125;</code></li>\n</ul>\n<p>OutputStream</p>\n<p>字节输出流</p>\n<ul>\n<li><code>public void write(int n)&#123;&#125;</code></li>\n<li><code>public void write(byte[] b)&#123;&#125;</code></li>\n<li><code>public void write(byte[] b,int off,int len)&#123;&#125;</code></li>\n</ul>\n<h2 id=\"字节流的子类\"><a href=\"# 字节流的子类\" class=\"headerlink\" title=\"字节流的子类\"></a>字节流的子类 </h2><h3 id=\"文件字节流\"><a href=\"# 文件字节流\" class=\"headerlink\" title=\"文件字节流\"></a> 文件字节流</h3><p><strong>FileInputStream</strong></p>\n<ul>\n<li><code>public int read()</code>// 从输入流中读取一个字节数据，返回读到的字节数据，如果达到文件末尾，返回 -1。</li>\n<li><code>public int read(byte[] b)</code>// 从输入流中读取字节数组长度的字节数据存入数组中，返回实际读到的字节数；如果达到文件的尾部，则返回 -1。</li>\n</ul>\n<p><strong>FileOutputStream</strong></p>\n<ul>\n<li><code>public void write(int b)</code>// 将指定字节写入输出流。</li>\n<li><code>public void write(bute[] b)</code>// 一次写多个字节，将 b 数组中所有字节，写入输出流。</li>\n</ul>\n<h4 id=\"测试\"><a href=\"# 测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*  FileInputStream 测试</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 文件内容：dafegesa</span></span><br><span class=\"line\">        FileInputStream ifs=<span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//read(); 读入单个字节</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 读入单个字节 &quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> data=ifs.read();</span><br><span class=\"line\">        System.out.println((<span class=\"keyword\">char</span>)data);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((data=ifs.read())!=-<span class=\"number\">1</span>)&#123;  <span class=\"comment\">//-1 代表文件已读完</span></span><br><span class=\"line\">            System.out.println((<span class=\"keyword\">char</span>)data);</span><br><span class=\"line\">        &#125;   <span class=\"comment\">// 按 1 个字节依次输出</span></span><br><span class=\"line\"><span class=\"comment\">//========== 上下两个测试部分不能同时进行，因为上半部分读完数据后输入流为空 =======</span></span><br><span class=\"line\">        ifs.reset();</span><br><span class=\"line\">        <span class=\"comment\">//read(byte[] b); 读入多个字节</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] b=<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">3</span>];   <span class=\"comment\">// 一次读取的字节数 =byte 的容量</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>((data=ifs.read(b))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"keyword\">new</span> String(b,<span class=\"number\">0</span>,data));</span><br><span class=\"line\">        &#125;   <span class=\"comment\">// 按 3 个字节依次输出</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ifs.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">*  FileOutputStream 测试</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 文件内容：dafegesa     若没有文件则会自动创建</span></span><br><span class=\"line\">        FileOutputStream ofs=<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//write(int b);</span></span><br><span class=\"line\">        ofs.write(<span class=\"number\">97</span>);</span><br><span class=\"line\">        ofs.write(<span class=\"string\">&#x27;b&#x27;</span>);</span><br><span class=\"line\">        ofs.write(<span class=\"string\">&#x27;c&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//write(byte[] b);</span></span><br><span class=\"line\">        ofs.write(<span class=\"keyword\">new</span> String(<span class=\"string\">&quot;hellorld&quot;</span>).getBytes());</span><br><span class=\"line\">        <span class=\"comment\">// 此时文件 bbb.txt 内容为 abchelloworld    原内容被替换</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ofs.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"读取图片\"><a href=\"# 读取图片\" class=\"headerlink\" title=\"读取图片\"></a>读取图片</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        FileInputStream ifs=<span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\right\\\\ganyu\\\\chigua.png&quot;</span>);</span><br><span class=\"line\">        FileOutputStream ofs=<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\chigua.png&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> count; <span class=\"comment\">// 保存一次读取到的实际字节数</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] b=<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((count=ifs.read(b))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            ofs.write(b,<span class=\"number\">0</span>,count);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 复制完成 &quot;</span>);</span><br><span class=\"line\">        ifs.close();</span><br><span class=\"line\">        ofs.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/8619b7f92f80487cbda54704fe6616cf.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"字节缓冲流\"><a href=\"# 字节缓冲流\" class=\"headerlink\" title=\"字节缓冲流\"></a>字节缓冲流</h3><p>BufferedInputStream<br>BufferedOutputStream</p>\n<p>目的：</p>\n<ol>\n<li>提高 IO 效率，减少访问磁盘的次数；</li>\n<li>数据存储在缓冲区中。flush 可以将缓存区的内容写入文件，也可以直接 close。</li>\n</ol>\n<h4 id=\"测试 -1\"><a href=\"# 测试 -1\" class=\"headerlink\" title=\"测试\"></a>测试</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 使用字节缓冲流读取</span></span><br><span class=\"line\"><span class=\"comment\">* BufferedInputStream</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        FileInputStream ifs=<span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 缓冲流需要一个底层流</span></span><br><span class=\"line\">        BufferedInputStream bis=<span class=\"keyword\">new</span> BufferedInputStream(ifs);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 读取</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((data=bis.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println((<span class=\"keyword\">char</span>)data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> count; <span class=\"comment\">// 保存一次读取到的实际字节数</span></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] b=<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((count=bis.read(b,<span class=\"number\">0</span>,b.length))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"keyword\">new</span> String(b,<span class=\"number\">0</span>,count));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        bis.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 使用字节缓冲流写入文件</span></span><br><span class=\"line\"><span class=\"comment\">* BufferedOutputStream</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        FileOutputStream ofs=<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 缓冲流将数据写入缓冲区</span></span><br><span class=\"line\">        BufferedOutputStream bos=<span class=\"keyword\">new</span> BufferedOutputStream(ofs);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 写入文件</span></span><br><span class=\"line\">        bos.write(<span class=\"string\">&quot;helloworld&quot;</span>.getBytes());</span><br><span class=\"line\">        bos.flush();  <span class=\"comment\">// 确认修改。源码内部也会调用 flush 方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">        bos.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"对象流\"><a href=\"# 对象流\" class=\"headerlink\" title=\"对象流\"></a>对象流</h3><p>ObjectOutputStream<br>ObjectInputStream</p>\n<ul>\n<li>增加了缓冲区功能。</li>\n<li>增强了读写 8 种基本数据类型和字符串功能。</li>\n<li>增强了读写对象的功能：<ul>\n<li><code>readObject()</code>// 从流中读取一个对象。又称反序列化</li>\n<li><code>writeObject(Object obj)</code>向流中写入一个对象。又称序列化</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"序列化\"><a href=\"# 序列化\" class=\"headerlink\" title=\"序列化\"></a>序列化</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* Student 类</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 要实现序列化必须先实现 Serializable 接口（源码为空，只是起标记作用）</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Student&#123;&quot;</span> +<span class=\"string\">&quot;name=&#x27;&quot;</span> + name + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +<span class=\"string\">&quot;, age=&quot;</span> + age +<span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用 ObjectOutputStream 实现对象的序列化</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        FileOutputStream ofs=<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\obj.bin&quot;</span>);</span><br><span class=\"line\">        ObjectOutputStream obs=<span class=\"keyword\">new</span> ObjectOutputStream(ofs);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 序列化(写文件)</span></span><br><span class=\"line\">        Student tang=<span class=\"keyword\">new</span> Student(<span class=\"string\">&quot; 唐瑞 &quot;</span>,<span class=\"number\">21</span>);</span><br><span class=\"line\">        obs.writeObject(tang);</span><br><span class=\"line\">        obs.close();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 序列化完成 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/a88741b9e9534f258575d8614c756059.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"反序列化\"><a href=\"# 反序列化\" class=\"headerlink\" title=\"反序列化\"></a>反序列化</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用 ObjectInputStream 实现反序列化（读取重构对象）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException,ClassNotFoundException </span>&#123;</span><br><span class=\"line\">        FileInputStream ifs=<span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\obj.bin&quot;</span>);</span><br><span class=\"line\">        ObjectInputStream obs=<span class=\"keyword\">new</span> ObjectInputStream(ifs);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 反序列化(读取文件)</span></span><br><span class=\"line\">        Student student=(Student)obs.readObject();</span><br><span class=\"line\">        obs.close();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 反序列化完成 &quot;</span>);</span><br><span class=\"line\">        System.out.println(student.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/06c5a95703fc496cb9ed29ab755851b6.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"附加说明\"><a href=\"# 附加说明\" class=\"headerlink\" title=\"附加说明\"></a>附加说明</h4><ul>\n<li><p>序列化类及其内部类必须实现 Serializable 接口。</p>\n</li>\n<li><p>序列化类中可以添加 <u> 序列化版本号 ID</u>，以保证序列化的类和被序列化的类是同一个类。在上面的代码中并没有添加序列号版本，虽然 IDE 没有报错，但是会显示一个警告，提示我添加序列化版本号（串行版本标识）。我们可以在 Student 类中添加：</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">100L</span>;  <span class=\"comment\">// 序列号</span></span><br></pre></td></tr></table></figure>\n\n<p>此时执行反序列化会报错</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Exception in thread <span class=\"string\">&quot;main&quot;</span> java.io.InvalidClassException: Student; local <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">incompatible</span>: <span class=\"title\">stream</span> <span class=\"title\">classdesc</span> <span class=\"title\">serialVersionUID</span> </span>= <span class=\"number\">5061154393647412285</span>, local <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">serialVersionUID</span> </span>= <span class=\"number\">100</span></span><br></pre></td></tr></table></figure>\n\n<p>报错内容说明两个类的 serialVersionUID 不同，<code>5061154393647412285</code>是我们没有自定义序列号时，序列化过程中系统自动生成的。  可以在修改序列号后重新序列化，这之后反序列化就能通过。</p>\n<ul>\n<li><p>tranisient(瞬时的)修饰符，可以避免修饰的属性被序列化，如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">transient</span> <span class=\"keyword\">int</span> age;</span><br></pre></td></tr></table></figure>\n\n<p>此时将学生类序列化后，age 不会被写入目标文件。反序列化的结果中，age 是一个默认值。</p>\n</li>\n<li><p>静态属性不能被序列化</p>\n</li>\n<li><p>可以利用集合来序列化多个对象</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList&lt;Student&gt; arrayList=<span class=\"keyword\">new</span> ArrayList&lt;Student&gt;();</span><br><span class=\"line\">arrayList.add(s1);</span><br><span class=\"line\">arrayList.add(s2);</span><br><span class=\"line\">arrayList.add(s3);</span><br><span class=\"line\">objectOutputStream.writeObject(arrayList);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList&lt;Student&gt; list=(ArrayList&lt;Student&gt;)objectInputStream.readObject();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 反序列化的结果是一个集合</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h1 id=\"编码方式\"><a href=\"# 编码方式\" class=\"headerlink\" title=\"编码方式\"></a>编码方式</h1><ul>\n<li><p>IOS-8859-1</p>\n<p>收录除 ASCII 外，还包括西欧、希腊语、泰语、阿拉伯语、希伯来语对应的文字符号。采用 1 个字节来表示，最多只能表示 256 个字符。</p>\n</li>\n<li><p>UTF-8</p>\n<p>针对 Unicode 码表的可变长度字符编码。国际上使用的编码，也称为“万国码”，收录了几乎所有国家的常用字符。采用 1 至 3 个字节来表示一个字符。</p>\n</li>\n<li><p>GB2312</p>\n<p>简体中文，采用 1 个或 2 个字节来表示字符，95 年之前所采用的编码。</p>\n</li>\n<li><p>GBK</p>\n<p>简体中文的扩充，GB2312 的升级版本。</p>\n</li>\n<li><p>BIG5</p>\n<p>台湾，繁体中文。</p>\n</li>\n</ul>\n<p><strong>当编码方式和解码方式不一致时，会出现乱码 </strong>。假如要读取的文件中的内容不是字母而是“<strong> 一二三四 </strong>”这样的汉字，那么读取出来的信息就是乱码。因为字节流按<u> 字节 </u> 输入输出，而这 <u> 四个汉字占了 12 个字节</u>，把一个汉字按一个一个字节读入自然会出现问题，这时就需要使用字符流。</p>\n<h1 id=\"字符流\"><a href=\"# 字符流\" class=\"headerlink\" title=\"字符流\"></a>字符流 </h1><h2 id=\"字符流继承关系\"><a href=\"# 字符流继承关系\" class=\"headerlink\" title=\"字符流继承关系\"></a> 字符流继承关系</h2><p><img src=\"https://img-blog.csdnimg.cn/1a5bb951a0e44dfd9b3e56dc05de23cc.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/3ab1b910d309406b8ec8ec4ec7dc56b5.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"字符流的抽象父类\"><a href=\"# 字符流的抽象父类\" class=\"headerlink\" title=\"字符流的抽象父类\"></a>字符流的抽象父类</h2><ul>\n<li><p><strong>Reader：</strong>字符输入流</p>\n<ul>\n<li><p><code>public int read()</code></p>\n<p>从流中读取单个字符，用整型来返回读取的字符；当读到流底部时返回 -1。</p>\n</li>\n<li><p><code>public int read(char[] c)</code></p>\n<p>从流中读取字符保存到 c 数组中，返回读取的字符个数，当读到流底部时返回 -1。</p>\n</li>\n<li><p><code>public int read(char[] cbuf,int off,int len)&#123;&#125;</code></p>\n<p>抽象方法。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>Writer：</strong>字符输出流</p>\n<ul>\n<li><p><code>public void write(int n)</code></p>\n<p>写入单个字符，只能写入包含 16 位低阶字节的整型数值，16 位高阶字节将会被忽略。</p>\n</li>\n<li><p><code>public void write(String str)</code></p>\n<p>写入一个字符串。</p>\n</li>\n<li><p><code>public void write(char[] cbuf)</code></p>\n<p>写入一个字符数组。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"字符流的子类\"><a href=\"# 字符流的子类\" class=\"headerlink\" title=\"字符流的子类\"></a>字符流的子类</h2><h3 id=\"FileReader\"><a href=\"#FileReader\" class=\"headerlink\" title=\"FileReader\"></a>FileReader</h3><ul>\n<li><p><code>public int read()</code></p>\n<p>继承自 InputStreamReader 类。读取单个字符，返回读取的字符，当读到流底部时返回 -1。</p>\n</li>\n<li><p><code>public int read(char[] c)</code></p>\n<p>继承自 Reader 类。</p>\n</li>\n<li><p><code>public int read(char[] cbuf,int offset,int length)</code></p>\n<p>继承自 InputStreamReader 类。从流中读取部分字符到 cbuf 中指定位置，返回读取到的字符个数，当读到流底部时返回 -1。</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">        FileReader ifs=<span class=\"keyword\">new</span> FileReader(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">        <span class=\"comment\">//read(); 每次读取一个字符而不是一个字节</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>((data=ifs.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println((<span class=\"keyword\">char</span>)data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ifs.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c7349f86f9824d8bb3d33aa03928b373.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"FileWriter\"><a href=\"#FileWriter\" class=\"headerlink\" title=\"FileWriter\"></a>FileWriter</h3><ul>\n<li><p><code>public void write(int c)</code></p>\n<p>继承自 OutputStreamWriter 类，写入一个字符。</p>\n</li>\n<li><p><code>public void write(String str)</code></p>\n<p>继承自 Writer 类。</p>\n</li>\n<li><p><code>public void Write(char[] cbuf)</code></p>\n<p>继承自 Writer 类。</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">        FileWriter ofs=<span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">        ofs.write(<span class=\"string\">&quot; 测试测试测试测试 &quot;</span>);</span><br><span class=\"line\">        ofs.close();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 执行完毕 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/31aba701076d4ee4ac1f5f75c9938b68.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"字符流复制测试\"><a href=\"# 字符流复制测试\" class=\"headerlink\" title=\"字符流复制测试\"></a>字符流复制测试</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用 FileReader 和 FileWrite 复制文本文件</span></span><br><span class=\"line\"><span class=\"comment\"> *  注：不能复制图片或二进制文件</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">        InputStreamReader inputStreamReader=<span class=\"keyword\">new</span> InputStreamReader(<span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp.txt&quot;</span>));</span><br><span class=\"line\">        FileWriter ofs=<span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp1.txt&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 读写</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> data=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((data=inputStreamReader.read())!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            ofs.write(data);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        inputStreamReader.close();</span><br><span class=\"line\">        ofs.close();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 执行完毕 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"字符缓冲流\"><a href=\"# 字符缓冲流\" class=\"headerlink\" title=\"字符缓冲流\"></a>字符缓冲流</h2><p>BufferedReader<br>BufferedWriter</p>\n<ul>\n<li>高效读写</li>\n<li>支持换行输入符</li>\n<li>可一次写一行、读一行。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用字符缓冲流读取文件</span></span><br><span class=\"line\"><span class=\"comment\"> * BufferedReader</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">        InputStreamReader inputStreamReader=<span class=\"keyword\">new</span> InputStreamReader(<span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp.txt&quot;</span>));</span><br><span class=\"line\">        BufferedReader bufferedReader=<span class=\"keyword\">new</span> BufferedReader(inputStreamReader);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//read(char[] cbuf)</span></span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] cbuf=<span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">3</span>]; <span class=\"comment\">// 一次读 3 的字符</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> count;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((count=bufferedReader.read(cbuf))!=-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"keyword\">new</span> String(cbuf,<span class=\"number\">0</span>,count));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//================== 上下部分不能同时进行，上部分读完后缓冲区已为空 ===================</span></span><br><span class=\"line\">        <span class=\"comment\">//readline();  一次读取一行</span></span><br><span class=\"line\">        String line;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>((line=bufferedReader.readLine())!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            System.out.println(line);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 执行完毕 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/94f8cc230bc84e5f8fd8f88df7559192.png?x-oss-process=imager\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使用字符缓冲流写入文件</span></span><br><span class=\"line\"><span class=\"comment\"> * BufferedWriter</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">        BufferedWriter bufferedWriter=<span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp1.txt&quot;</span>));</span><br><span class=\"line\">        bufferedWriter.write(<span class=\"string\">&quot; 测试一测试一测试一 \\r\\n 测试一测试一 &quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 换行符: windows--&gt;\\r\\n    linux \\n</span></span><br><span class=\"line\">        bufferedWriter.newLine();</span><br><span class=\"line\">        bufferedWriter.write(<span class=\"string\">&quot; 测试二 \\r\\n 测试二测试二测试二测试二 &quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        bufferedWriter.close();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 执行完毕 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/02f853b7f45b471a9fb65bc55df50abc.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"打印流\"><a href=\"# 打印流\" class=\"headerlink\" title=\"打印流\"></a>打印流</h2><p><strong>PrintWriter：</strong></p>\n<ul>\n<li>封装了 print()/println()方法，支持写入后换行。</li>\n<li>支持数据原样打印。比如打印 97 会按原样写入 97 而不是转成‘a’。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">        PrintWriter printWriter=<span class=\"keyword\">new</span> PrintWriter(<span class=\"keyword\">new</span> FileWriter(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp1.txt&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 打印到文件</span></span><br><span class=\"line\">        printWriter.println(<span class=\"number\">97</span>);<span class=\"comment\">//97</span></span><br><span class=\"line\">        printWriter.println(<span class=\"string\">&#x27;b&#x27;</span>);<span class=\"comment\">//b</span></span><br><span class=\"line\">        printWriter.println(<span class=\"number\">3.14</span>);<span class=\"comment\">//3.14</span></span><br><span class=\"line\">        printWriter.println(<span class=\"keyword\">true</span>);<span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">        printWriter.close();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 执行完毕 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/6d6bd8d0d22a404a8b4f4fdc3252c552.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"转换流\"><a href=\"# 转换流\" class=\"headerlink\" title=\"转换流\"></a>转换流 </h2><p><strong> 桥转换流</strong>：InputStreamReader/OutputStreamWriter</p>\n<ul>\n<li>可将字节流转换为字符流。</li>\n<li>可设置字符的编码方式。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">        OutputStreamWriter outputStreamWriter=<span class=\"keyword\">new</span> OutputStreamWriter(<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp1.txt&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        outputStreamWriter.write(<span class=\"string\">&quot; 转换流测试 &quot;</span>);</span><br><span class=\"line\">        outputStreamWriter.close();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 执行完毕 &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/ceb4f3c0cd9740e9b4516400fd707dca.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"File 类\"><a href=\"#File 类\" class=\"headerlink\" title=\"File 类\"></a>File 类</h1><p>File 类可以指向一个文件或一个目录</p>\n<p><strong>方法</strong>：</p>\n<ul>\n<li><p><code>public boolean CreateNewFile()</code></p>\n<p>当且仅当指定的文件名不存在时创建一个指定的新的、空的文件。创建成功返回 true，如果指定文件名已存在返回 false。</p>\n</li>\n<li><p><code>public boolean mkdir()</code></p>\n<p>创建一个指定路径名的文件夹。当且仅当文件夹被创建时返回 true，否则返回 false。</p>\n</li>\n<li><p><code>public boolean delete()</code></p>\n<p>删除一个指定的文件或文件夹，文件夹必须为空才能被删除。当且仅当指定的文件或文件夹被删除时返回 true，否则返回 false。</p>\n</li>\n<li><p><code>public boolean exists()</code></p>\n<p>检查指定的文件或文件夹是否存在。当且仅当指定的文件或者文件夹存在时返回 true，否则返回 false。</p>\n</li>\n<li><p><code>public File[] listFiles()</code></p>\n<p>列出目录中的所有内容，返回一个指定路径名中的文件数组，如果指定的路径名不代表一个文件夹（目录）就返回 null。</p>\n</li>\n<li><p><code>public boolean renameTo(File dest)</code></p>\n<p>重命名一个路径名所指定的文件。当且仅当修改操作成功时返回 true，否则返回 false。</p>\n</li>\n</ul>\n<h2 id=\"文件操作\"><a href=\"# 文件操作\" class=\"headerlink\" title=\"文件操作\"></a>文件操作</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException,InterruptedException</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 输出：</span></span><br><span class=\"line\">        <span class=\"comment\">// 路径分隔符：;</span></span><br><span class=\"line\">        <span class=\"comment\">// 名称分隔符：\\</span></span><br><span class=\"line\">        separator();</span><br><span class=\"line\">        fileOp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">separator</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 路径分隔符：&quot;</span>+File.pathSeparator);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 名称分隔符：&quot;</span>+File.separator);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">fileOp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException,InterruptedException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 创建文件</span></span><br><span class=\"line\">        File file=<span class=\"keyword\">new</span> File(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\temp1.txt&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!file.exists())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> flag=file.createNewFile();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 创建状态 &quot;</span>+flag);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 删除文件</span></span><br><span class=\"line\">        <span class=\"comment\">//2.1 直接删除</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(&quot; 删除结果：&quot;+file.delete());</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.2 使用 JVM 退出时自动删除</span></span><br><span class=\"line\">        file.deleteOnExit();</span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">5000</span>);  <span class=\"comment\">// 延迟 5 秒后自动删除文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3. 获取文件信息</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 文件绝对路径：&quot;</span>+file.getAbsolutePath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 获取路径：&quot;</span>+file.getPath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 获取父目录：&quot;</span>+file.getParent());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 获取文件名称：&quot;</span>+file.getName());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 获取文件长度：&quot;</span>+file.length());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 获取文件创建时间：&quot;</span>+<span class=\"keyword\">new</span> Date(file.lastModified()));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4. 判断内容</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 是否可写：&quot;</span>+file.canWrite());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 是否可读：&quot;</span>+file.canRead());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 是否隐藏：&quot;</span>+file.isHidden());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 是否是文件：&quot;</span>+file.isFile());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 是否是文件夹：&quot;</span>+file.isDirectory());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"目录操作\"><a href=\"# 目录操作\" class=\"headerlink\" title=\"目录操作\"></a>目录操作</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        directorOp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">directorOp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 创建目录</span></span><br><span class=\"line\">        File dir=<span class=\"keyword\">new</span> File(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!dir.exists())&#123;</span><br><span class=\"line\">            <span class=\"comment\">//mkdir();  只能创建单级目录</span></span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> flag=dir.mkdirs();  <span class=\"comment\">// 创建多级目录</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot; 创建结果：&quot;</span>+flag);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 删除目录</span></span><br><span class=\"line\">        <span class=\"comment\">//2.1 直接删除</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(&quot; 删除结果：&quot;+dir.delete());</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.2 使用 JVM 删除</span></span><br><span class=\"line\">        dir.deleteOnExit();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3. 获取目录信息</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 获取绝对路径：&quot;</span>+dir.getAbsolutePath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 获取路径：&quot;</span>+dir.getPath());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 获取父目录：&quot;</span>+dir.getParent());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 获取创建时间：&quot;</span>+<span class=\"keyword\">new</span> Date(dir.lastModified()));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 文件夹名称：&quot;</span>+dir.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4. 判断</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 是否隐藏：&quot;</span>+dir.isHidden());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot; 是否是文件：&quot;</span>+dir.isFile());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5. 遍历目录</span></span><br><span class=\"line\">        File dir2=<span class=\"keyword\">new</span> File(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop&quot;</span>);</span><br><span class=\"line\">        String[] files=dir2.list();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String string:files)&#123;</span><br><span class=\"line\">            System.out.println(string);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"文件过滤器\"><a href=\"# 文件过滤器\" class=\"headerlink\" title=\"文件过滤器\"></a>文件过滤器</h2><p><strong>FileFilter 接口：</strong></p>\n<p><code>public interface FileFilter</code></p>\n<ul>\n<li><code>boolean accepte(File pathname)</code></li>\n<li>当调用 File 类中的 listFiles()方法时，支持传入 FileFilter 接口实现类，对获取的文件进行过滤，只有满足条件的文件才可以出现在 listFiles()的返回值中。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 实现只打印当前目录中的 txt 文件的文件名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这段代码卸载 6.2 中的 &quot;5. 遍历目录 &quot; 处</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span>  <span class=\"title\">directorOp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    File[] files1=dir2.listFiles(<span class=\"keyword\">new</span> FileFilter() &#123;\t\t</span><br><span class=\"line\">        <span class=\"comment\">// 自定义筛选条件</span></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">accept</span><span class=\"params\">(File pathname)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(pathname.getName().endsWith(<span class=\"string\">&quot;.txt&quot;</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (File file : files1) &#123;</span><br><span class=\"line\">        System.out.println(file.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"文件操作案例\"><a href=\"# 文件操作案例\" class=\"headerlink\" title=\"文件操作案例\"></a>文件操作案例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//......</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 递归遍历目录</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">listDer</span><span class=\"params\">(File dir)</span> </span>&#123;</span><br><span class=\"line\">        File[] files=dir.listFiles();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(files!=<span class=\"keyword\">null</span> &amp;&amp; files.length&gt;<span class=\"number\">0</span>)&#123;   <span class=\"comment\">//files 是目录</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(File file:files)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(file.isDirectory())&#123;</span><br><span class=\"line\">                    listDer(file);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    System.out.println(file.getName());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 递归删除目录</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteDir</span><span class=\"params\">(File dir)</span> </span>&#123;</span><br><span class=\"line\">        File[] files=dir.listFiles();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(files!=<span class=\"keyword\">null</span> &amp;&amp; files.length&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(File file:files)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(file.isDirectory())&#123;</span><br><span class=\"line\">                    deleteDir(file);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> file.delete();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dir.delete();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Prioerties 类\"><a href=\"#Prioerties 类\" class=\"headerlink\" title=\"Prioerties 类\"></a>Prioerties 类 </h1><p> 又称属性集合。使用方式和 map 类似。</p>\n<p>特点：</p>\n<ul>\n<li>存储属性名和属性值(都是字符串类型)</li>\n<li>没有泛型</li>\n<li>和流有关</li>\n</ul>\n<p><strong>方法：</strong></p>\n<ul>\n<li><p><code>public String getProperty(String key)</code></p>\n<p>根据 key 在属性列表里查找 value，如果原始属性列表找不到就去默认属性列表找。返回 key 所对应的 value。</p>\n</li>\n<li><p><code>public void list(PrintWriter out)</code></p>\n<p>将属性列表打印在指定的输出流上，在 debug 时很有用。</p>\n</li>\n<li><p><code>public Object setProperty(String key,String value)</code></p>\n<p>内部调用的是 Hashtable 的 put 方法，将 key 和 value 成对地保存在属性列表中。返回这个 key 上一个对应的 value，没有就返回 null。</p>\n</li>\n</ul>\n<p>Properties 可以保存在一个流中或是从一个流中加载，属性列表中的每个键值对都是一个字符串。一个属性列表可以包括另一个第二属性列表来作为它的默认值，如果在原始属性列表中没有找到 key 时就搜索第二属性列表。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">        Properties properties=<span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">        <span class=\"comment\">// 添加数据</span></span><br><span class=\"line\">        properties.setProperty(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;tanghui&quot;</span>);</span><br><span class=\"line\">        properties.setProperty(<span class=\"string\">&quot;age&quot;</span>,<span class=\"string\">&quot;21&quot;</span>);</span><br><span class=\"line\">        System.out.println(properties.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 遍历    使用 keySet、entrySet 的过程与 map 相近</span></span><br><span class=\"line\">        <span class=\"comment\">// 使用 stringPropertyNames() 遍历</span></span><br><span class=\"line\">        Set&lt;String&gt; set=properties.stringPropertyNames();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(String string:set)&#123;</span><br><span class=\"line\">            System.out.println(string+<span class=\"string\">&quot; &quot;</span>+properties.getProperty(string));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 和流有关的方法</span></span><br><span class=\"line\">        <span class=\"comment\">//list</span></span><br><span class=\"line\">        PrintWriter printWriter=<span class=\"keyword\">new</span> PrintWriter(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\temp1.txt&quot;</span>);</span><br><span class=\"line\">        properties.list(printWriter);   <span class=\"comment\">//properties 中的内容写入文件</span></span><br><span class=\"line\">        printWriter.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//store 保存</span></span><br><span class=\"line\">        FileOutputStream fileOutputStream=<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\a.properties&quot;</span>);</span><br><span class=\"line\">        properties.store(fileOutputStream,<span class=\"string\">&quot;NOTES&quot;</span>);</span><br><span class=\"line\">        fileOutputStream.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//load 加载</span></span><br><span class=\"line\">        Properties properties1=<span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">        FileInputStream fileInputStream=<span class=\"keyword\">new</span> FileInputStream(<span class=\"string\">&quot;C:\\\\Users\\\\96955\\\\Desktop\\\\tempblog\\\\a.properties&quot;</span>);</span><br><span class=\"line\">        properties1.load(fileInputStream);   <span class=\"comment\">// 从 properties 文件中读取内容</span></span><br><span class=\"line\">        fileInputStream.close();</span><br><span class=\"line\">        System.out.println(properties1.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://img-blog.csdnimg.cn/518f0291d72b4997a64ec76d2e50ee4d.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n","url":"/posts/21012/","min2read":20,"word4post":"4.5k","prev_post":{"title":"JavaGUI 基础","url":"/posts/47384/"},"next_post":{"title":"Java 集合框架","url":"/posts/40254/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"Java-IO 框架\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">Java IO 框架 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"流的概念\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">流的概念 </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"流的分类\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">流的分类</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"字节流\" href = \"#\"><span class=\"toc-number\">4.</span> <span class=\"toc-text\">字节流 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"继承关系\" href = \"#\"><span class=\"toc-number\">4.1.</span> <span class=\"toc-text\"> 继承关系 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"字节流的抽象父类\" href = \"#\"><span class=\"toc-number\">4.2.</span> <span class=\"toc-text\">字节流的抽象父类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"字节流的子类\" href = \"#\"><span class=\"toc-number\">4.3.</span> <span class=\"toc-text\">字节流的子类 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"文件字节流\" href = \"#\"><span class=\"toc-number\">4.3.1.</span> <span class=\"toc-text\"> 文件字节流</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"测试\" href = \"#\"><span class=\"toc-number\">4.3.1.1.</span> <span class=\"toc-text\">测试</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"读取图片\" href = \"#\"><span class=\"toc-number\">4.3.1.2.</span> <span class=\"toc-text\">读取图片</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"字节缓冲流\" href = \"#\"><span class=\"toc-number\">4.3.2.</span> <span class=\"toc-text\">字节缓冲流</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"测试 -1\" href = \"#\"><span class=\"toc-number\">4.3.2.1.</span> <span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"对象流\" href = \"#\"><span class=\"toc-number\">4.3.3.</span> <span class=\"toc-text\">对象流</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"序列化\" href = \"#\"><span class=\"toc-number\">4.3.3.1.</span> <span class=\"toc-text\">序列化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"反序列化\" href = \"#\"><span class=\"toc-number\">4.3.3.2.</span> <span class=\"toc-text\">反序列化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"附加说明\" href = \"#\"><span class=\"toc-number\">4.3.3.3.</span> <span class=\"toc-text\">附加说明</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"编码方式\" href = \"#\"><span class=\"toc-number\">5.</span> <span class=\"toc-text\">编码方式</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"字符流\" href = \"#\"><span class=\"toc-number\">6.</span> <span class=\"toc-text\">字符流 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"字符流继承关系\" href = \"#\"><span class=\"toc-number\">6.1.</span> <span class=\"toc-text\"> 字符流继承关系</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"字符流的抽象父类\" href = \"#\"><span class=\"toc-number\">6.2.</span> <span class=\"toc-text\">字符流的抽象父类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"字符流的子类\" href = \"#\"><span class=\"toc-number\">6.3.</span> <span class=\"toc-text\">字符流的子类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"FileReader\" href = \"#\"><span class=\"toc-number\">6.3.1.</span> <span class=\"toc-text\">FileReader</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"FileWriter\" href = \"#\"><span class=\"toc-number\">6.3.2.</span> <span class=\"toc-text\">FileWriter</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"字符流复制测试\" href = \"#\"><span class=\"toc-number\">6.3.3.</span> <span class=\"toc-text\">字符流复制测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"字符缓冲流\" href = \"#\"><span class=\"toc-number\">6.4.</span> <span class=\"toc-text\">字符缓冲流</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"打印流\" href = \"#\"><span class=\"toc-number\">6.5.</span> <span class=\"toc-text\">打印流</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"转换流\" href = \"#\"><span class=\"toc-number\">6.6.</span> <span class=\"toc-text\">转换流 </span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"File 类\" href = \"#\"><span class=\"toc-number\">7.</span> <span class=\"toc-text\">File 类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"文件操作\" href = \"#\"><span class=\"toc-number\">7.1.</span> <span class=\"toc-text\">文件操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"目录操作\" href = \"#\"><span class=\"toc-number\">7.2.</span> <span class=\"toc-text\">目录操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"文件过滤器\" href = \"#\"><span class=\"toc-number\">7.3.</span> <span class=\"toc-text\">文件过滤器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"文件操作案例\" href = \"#\"><span class=\"toc-number\">7.4.</span> <span class=\"toc-text\">文件操作案例</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"Prioerties 类\" href = \"#\"><span class=\"toc-number\">8.</span> <span class=\"toc-text\">Prioerties 类 </span></a></li></ol>","categories":[],"tags":[{"name":"JavaSE","path":"api/tags/JavaSE.json","url":"/tags/JavaSE/"}]}