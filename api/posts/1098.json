{"title":"java 语法基础 (一)","slug":"java语法基础(一)","date":"2021-12-04","updated":"2022-01-31","comments":true,"path":"api/posts/1098.json","excerpt":null,"cover":"https://img-blog.csdnimg.cn/91a5ce9c75554b4daf5ac4a36caedb49.png?x-oss-process=image","covers":["https://img-blog.csdnimg.cn/91a5ce9c75554b4daf5ac4a36caedb49.png?x-oss-process=image","https://img-blog.csdnimg.cn/9264299206854bd59b4405d293c46b9d.png#pic_center","https://img-blog.csdnimg.cn/da979f45f8e74bf594a9045a3abbb69c.png?x-oss-process=image","https://img-blog.csdnimg.cn/f01377ad9af64a6c8d6ac7efbe2c7c26.png?x-oss-process=image","https://img-blog.csdnimg.cn/053c4577177746df9c2efb85dc09ee9a.png?x-oss-process=image","https://img-blog.csdnimg.cn/238255d592b94bc583b4db3438e6b268.png?x-oss-process=image","https://img-blog.csdnimg.cn/eef35196109b4e4882a9949d93de7e02.png?x-oss-process=image","https://img-blog.csdnimg.cn/28e12e57ed6c4540aafde209df8a6b46.png?x-oss-process=image","https://img-blog.csdnimg.cn/423e4928e5b14b7f96f986c3207e54b0.png?x-oss-process=image"],"content":"<h1 id=\"语法基础\"><a href=\"# 语法基础\" class=\"headerlink\" title=\"语法基础\"></a>语法基础</h1><p>CSDN:<a href=\"https://blog.csdn.net/INFINITE_WAR/article/details/121714143\">https://blog.csdn.net/INFINITE_WAR/article/details/121714143</a></p>\n<p>注：主要记录 Java 有而 C++ 没有的特点</p>\n<h2 id=\"注释\"><a href=\"# 注释\" class=\"headerlink\" title=\"注释\"></a>注释 </h2><p> 单行多行跟 C++ 无区别</p>\n<p>文档注释：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">*@(注释标题 1) 具体内容</span></span><br><span class=\"line\"><span class=\"comment\">*@(注释标题 2) 具体内容</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关键字\"><a href=\"# 关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p><img src=\"https://img-blog.csdnimg.cn/91a5ce9c75554b4daf5ac4a36caedb49.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p>java 可以用中文命名标识符</p>\n<h2 id=\"数据类型\"><a href=\"# 数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型 </h2><p> 跟 C++ 一样，java 也是强类型语言</p>\n<h3 id=\"基本类型\"><a href=\"# 基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h3><table>\n<thead>\n<tr>\n<th>整数类型</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>byte</td>\n<td>占 1 个字节：-128~127</td>\n</tr>\n<tr>\n<td>short</td>\n<td>占 2 个字节：-32768~32767</td>\n</tr>\n<tr>\n<td>int</td>\n<td>占 4 个字节：-2147483648~2147483647</td>\n</tr>\n<tr>\n<td>long</td>\n<td>占 8 个字                   节： -9223372036854775808~9223372036854775807</td>\n</tr>\n</tbody></table>\n<p>没有 long long 类型</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n1=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> n2=<span class=\"number\">10L</span>;    <span class=\"comment\">// 加个 L 来标定 10 是 long 类型，否则报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> i1=<span class=\"number\">10</span>;   <span class=\"comment\">// 十进制</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> i2=<span class=\"number\">010</span>;  <span class=\"comment\">// 八进制 0</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> i3=<span class=\"number\">0x10</span>; <span class=\"comment\">// 十六进制 0x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> x=<span class=\"number\">10_00_00</span>    <span class=\"comment\">// 打印 x 时下划线不会被输出。这种方法主要是为了更清楚地看一个大数字</span></span><br></pre></td></tr></table></figure>\n\n\n\n<table>\n<thead>\n<tr>\n<th>浮点类型</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>float</td>\n<td>占 4 个字节</td>\n</tr>\n<tr>\n<td>double</td>\n<td>占 8 个字节</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">long</span> f1=<span class=\"number\">1.1F</span>;     <span class=\"comment\">// 加个 F 来标定 1.1 是 float 类型，否则报错</span></span><br><span class=\"line\"><span class=\"keyword\">double</span> f2=<span class=\"number\">1.1</span>;</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">字符类型</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">char</td>\n<td>占 <u>2 个</u> 字节, Unicode 编码(U0000~UFFFF)</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>布尔类型</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>boolean（不是 bool）</td>\n<td>占一位。只有 true、false 两个值</td>\n</tr>\n</tbody></table>\n<h3 id=\"3-2 引用类型\"><a href=\"#3-2 引用类型\" class=\"headerlink\" title=\"3.2 引用类型\"></a>3.2 引用类型 </h3><p> 类、 接口、数组</p>\n<h2 id=\"类型转换\"><a href=\"# 类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p><img src=\"https://img-blog.csdnimg.cn/9264299206854bd59b4405d293c46b9d.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(类型)变量名     <span class=\"comment\">// 强制转换   高 --&gt; 低</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">long</span> a=<span class=\"number\">1000000000</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> x=a*b;   <span class=\"comment\">//x 会输出 10000000000,b 在计算过程中会自动向上转换</span></span><br><span class=\"line\"><span class=\"comment\">// 如果声明的是 int a, 那么 a*b 不会产生类型转换，计算结果会溢出，x 会获得溢出值</span></span><br></pre></td></tr></table></figure>\n\n<p>注：1. 不能对 boolean 进行转换。</p>\n<p>​       2. 不能把对象类型转换位不相关的类型。</p>\n<p>​       3. 在把高容量类型（如 long）转换到低容量类型（如 int）的时候要执行强制转换。反之会执行自动转换。</p>\n<p>​       4. 转换的时候可能存在内存溢出或精度问题。</p>\n<h2 id=\"变量\"><a href=\"# 变量\" class=\"headerlink\" title=\"变量\"></a>变量 </h2><p> 实例变量若不初始化，一般默认值都是类似 0，0.0，null，false 的形式</p>\n<p>类变量：用 static 修饰</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> salary=<span class=\"number\">2500</span>;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> age=<span class=\"number\">25</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        Demo demo=<span class=\"keyword\">new</span> Demo();</span><br><span class=\"line\">        System.out.print(demo.age); <span class=\"comment\">// 实例变量必须通过对象调用</span></span><br><span class=\"line\">        System.out.print(salary);   <span class=\"comment\">// 类变量不用通过对象调用</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"常量\"><a href=\"# 常量\" class=\"headerlink\" title=\"常量\"></a>常量</h3><p>java 的常量用 final 修饰</p>\n<h3 id=\"变量命名规范\"><a href=\"# 变量命名规范\" class=\"headerlink\" title=\"变量命名规范\"></a>变量命名规范</h3><ol>\n<li>所有变量、方法、类名：见名知意</li>\n<li>类成员变量：首字母小写和驼峰原则：monthSalary  除了第一个单词以外，后面的单词首字母用大写 monthCommonBonus</li>\n<li>局部变量：首字母小写和驼峰原则</li>\n<li>常量：大写字母和下划线：MAX_VALUE</li>\n<li>类名：首字母大写和驼峰原则：Man，LinkList</li>\n<li>方法名：首字母小写和驼峰原则</li>\n</ol>\n<h2 id=\"运算符\"><a href=\"# 运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><p>java 多了一个 instanceof，其他跟 C++ 一样</p>\n<p>instance 的作用是测试它左边的对象是否是它右边的类的实例，返回 boolean 的数据类型。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">boolean</span> result = object <span class=\"keyword\">instanceof</span> <span class=\"class\"><span class=\"keyword\">class</span></span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">   Object testObject = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">      displayObjectClass(testObject);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">displayObjectClass</span><span class=\"params\">(Object o)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (o <span class=\"keyword\">instanceof</span> Vector)</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot; 对象是 java.util.Vector 类的实例 &quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (o <span class=\"keyword\">instanceof</span> ArrayList)</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot; 对象是 java.util.ArrayList 类的实例 &quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot; 对象是 &quot;</span> + o.getClass() + <span class=\"string\">&quot; 类的实例 &quot;</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 输出为 &quot; 对象是 java.util.ArrayList 类的实例 &quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>对象若是   类(或直接子类、间接子类，也可以说是同一继承树)   的对象   那么 instanceof 会返回 true。</p>\n<p>null 用 instanceof 跟任何类型比较时都是 false。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一个特例</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a=<span class=\"number\">10</span>,b=<span class=\"number\">10</span>;</span><br><span class=\"line\">System.out.print(<span class=\"string\">&quot;&quot;</span>+a+b);   <span class=\"comment\">// 输出 20</span></span><br><span class=\"line\">System.out.print(a+b+<span class=\"string\">&quot;&quot;</span>);   <span class=\"comment\">// 输出 1010</span></span><br><span class=\"line\"><span class=\"comment\">// 从左往右看来判断 &quot;+&quot; 号是字符串连接还是算数加法</span></span><br></pre></td></tr></table></figure>\n\n<p>更多数学运算可以调用 Math 类</p>\n<h2 id=\"包机制\"><a href=\"# 包机制\" class=\"headerlink\" title=\"包机制\"></a>包机制 </h2><h3 id=\"package\"><a href=\"#package\" class=\"headerlink\" title=\"package\"></a>package</h3><p> 类似于 C++ 的 namespace。也可以看成文件夹。可以避免命名冲突</p>\n<p><img src=\"https://img-blog.csdnimg.cn/da979f45f8e74bf594a9045a3abbb69c.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span>  pkg1[.pkg2[.pkg3...]]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://img-blog.csdnimg.cn/f01377ad9af64a6c8d6ac7efbe2c7c26.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p>类 a 放在目录 Mitchell.tools 下，因此编写类 a 的时候必须在开头加上一句</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Mitchell.tools;</span><br></pre></td></tr></table></figure>\n\n<p>编辑类 HelloWorld，必须在开头加上一句</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> Mitchell;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"import 导包\"><a href=\"#import 导包\" class=\"headerlink\" title=\"import 导包\"></a>import 导包</h3><p>import 语句必须放在 package 语句下面</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> package1[.package2].(classname | *);    <span class=\"comment\">//* 代表相关包下的所有类</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"JavaDoc\"><a href=\"#JavaDoc\" class=\"headerlink\" title=\"JavaDoc\"></a>JavaDoc</h2><p>目的: 生成自己的 API 文档</p>\n<h3 id=\"基本内容\"><a href=\"# 基本内容\" class=\"headerlink\" title=\"基本内容\"></a>基本内容</h3><table>\n<thead>\n<tr>\n<th>可用参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>@author</td>\n<td>作者名</td>\n</tr>\n<tr>\n<td>@version</td>\n<td>版本号</td>\n</tr>\n<tr>\n<td>@since</td>\n<td>指明需要最早使用的 jdk 版本</td>\n</tr>\n<tr>\n<td>@param</td>\n<td>参数名</td>\n</tr>\n<tr>\n<td>@return</td>\n<td>返回值情况</td>\n</tr>\n<tr>\n<td>@throws</td>\n<td>异常抛出情况</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://img-blog.csdnimg.cn/053c4577177746df9c2efb85dc09ee9a.png?x-oss-process=image\" alt=\"在这里插入图片描述\"><br>按目录方式打开文件 <br><img src=\"https://img-blog.csdnimg.cn/02964bc8cef84f7c818e8488f61dc010.png?x-oss-process=image\" alt=\"在这里插入图片描述\"> 当前文件目录<br><img src=\"https://img-blog.csdnimg.cn/c17e27ad5f51432683963c9b454f8783.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"生成文档的方法\"><a href=\"# 生成文档的方法\" class=\"headerlink\" title=\"生成文档的方法\"></a>生成文档的方法 </h3><h4 id=\"方法 1- 命令行\"><a href=\"# 方法 1- 命令行\" class=\"headerlink\" title=\"方法 1 命令行\"></a> 方法 1 命令行</h4><p><img src=\"https://img-blog.csdnimg.cn/238255d592b94bc583b4db3438e6b268.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"方法 2-idea 内置工具\"><a href=\"# 方法 2-idea 内置工具\" class=\"headerlink\" title=\"方法 2 idea 内置工具\"></a>方法 2 idea 内置工具</h4><p><img src=\"https://img-blog.csdnimg.cn/eef35196109b4e4882a9949d93de7e02.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/28e12e57ed6c4540aafde209df8a6b46.png?x-oss-process=image\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"效果\"><a href=\"# 效果\" class=\"headerlink\" title=\"效果\"></a>效果 </h4><p><img src=\"https://img-blog.csdnimg.cn/423e4928e5b14b7f96f986c3207e54b0.png?x-oss-process=image\" alt=\"在这里插入图片描述\"><br> 网页效果<img src=\"https://img-blog.csdnimg.cn/727873f7c3a34d13a35a014b005d5152.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASU5GSU5JVEVfV0FS,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n","url":"/posts/1098/","min2read":4,"word4post":"1.1k","prev_post":{"title":"java 基本语法 (二)","url":"/posts/54575/"},"next_post":{"title":"初识 Java（一些常识）","url":"/posts/61970/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"语法基础\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">语法基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"注释\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\">注释 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"关键字\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">关键字</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"数据类型\" href = \"#\"><span class=\"toc-number\">1.3.</span> <span class=\"toc-text\">数据类型 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"基本类型\" href = \"#\"><span class=\"toc-number\">1.3.1.</span> <span class=\"toc-text\">基本类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"3-2 引用类型\" href = \"#\"><span class=\"toc-number\">1.3.2.</span> <span class=\"toc-text\">3.2 引用类型 </span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"类型转换\" href = \"#\"><span class=\"toc-number\">1.4.</span> <span class=\"toc-text\">类型转换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"变量\" href = \"#\"><span class=\"toc-number\">1.5.</span> <span class=\"toc-text\">变量 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"常量\" href = \"#\"><span class=\"toc-number\">1.5.1.</span> <span class=\"toc-text\">常量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"变量命名规范\" href = \"#\"><span class=\"toc-number\">1.5.2.</span> <span class=\"toc-text\">变量命名规范</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"运算符\" href = \"#\"><span class=\"toc-number\">1.6.</span> <span class=\"toc-text\">运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"包机制\" href = \"#\"><span class=\"toc-number\">1.7.</span> <span class=\"toc-text\">包机制 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"package\" href = \"#\"><span class=\"toc-number\">1.7.1.</span> <span class=\"toc-text\">package</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"import 导包\" href = \"#\"><span class=\"toc-number\">1.7.2.</span> <span class=\"toc-text\">import 导包</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"JavaDoc\" href = \"#\"><span class=\"toc-number\">1.8.</span> <span class=\"toc-text\">JavaDoc</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"基本内容\" href = \"#\"><span class=\"toc-number\">1.8.1.</span> <span class=\"toc-text\">基本内容</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"生成文档的方法\" href = \"#\"><span class=\"toc-number\">1.8.2.</span> <span class=\"toc-text\">生成文档的方法 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"方法 1- 命令行\" href = \"#\"><span class=\"toc-number\">1.8.2.1.</span> <span class=\"toc-text\"> 方法 1 命令行</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"方法 2-idea 内置工具\" href = \"#\"><span class=\"toc-number\">1.8.2.2.</span> <span class=\"toc-text\">方法 2 idea 内置工具</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" data-id=\"效果\" href = \"#\"><span class=\"toc-number\">1.8.2.3.</span> <span class=\"toc-text\">效果 </span></a></li></ol></li></ol></li></ol></li></ol>","categories":[],"tags":[{"name":"JavaSE","path":"api/tags/JavaSE.json","url":"/tags/JavaSE/"}]}