(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{378:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("参考视频：BV1Vy4y1z7EX")]),t._v(" "),a("p",[t._v("CSDN: https://blog.csdn.net/INFINITE_WAR/article/details/120408155")]),t._v(" "),a("p",[t._v("一些频繁出现的用例名字：\nemp  员工信息表\ndept  部门信息表\nename  员工名\njob  工作\nsal  工资\ndeptno  部门编号")]),t._v(" "),a("h1",{attrs:{id:"一、开始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、开始"}},[t._v("#")]),t._v(" 一、开始")]),t._v(" "),a("p",[t._v("SQL现为手动模式（cmd操作，要管理员模式）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("net "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("start")]),t._v(" MySQL80  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打开MySQL80服务")]),t._v("\nnet stop MySQL80   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关闭\t")]),t._v("\n")])])]),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"请添加图片描述","data-src":"https://img-blog.csdnimg.cn/21fd39ea59774c04b87944f482587c35.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASU5GSU5JVEVfV0FS,size_8,color_FFFFFF,t_70,g_se,x_16",loading:"lazy"}}),t._v(" "),a("img",{staticClass:"lazy",attrs:{alt:"请添加图片描述","data-src":"https://img-blog.csdnimg.cn/c98d0c774349457a895089d75fd2664e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASU5GSU5JVEVfV0FS,size_14,color_FFFFFF,t_70,g_se,x_16",loading:"lazy"}}),t._v("\n需要提前注册mysql账号")]),t._v(" "),a("p",[t._v("xxxx.sql   为sql脚本文件，里面编写了大量的sql语句，在mysql中使用命令‘source   (文件路径)’ 即可执行脚本文件里的所有语句。")]),t._v(" "),a("p",[t._v("开始会有一个基础数据库databases，里面嵌套着其他数据库。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" show databases"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+-----------------------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Database                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" first_database              "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   //自己测试用的表在这里。也可以另行开辟\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" information_schema          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" mysql                       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" performance_schema          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" sakila                      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" sys                         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" world                       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+-----------------------------+\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" rows "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("通过 ‘use （数据库名）’可以打开指定数据库，可以在该数据库中建立表并继续操作。")]),t._v(" "),a("p",[t._v("打开first_database后使用show tables 命令显示所有的表。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" show tables"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n+--------------------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Tables_in_first_database "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+--------------------------+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" score                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" student                  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" tab1                     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+--------------------------+\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" rows "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("student的创建：")]),t._v(" "),a("p",[t._v("mysql> CREATE  TABLE  student (\n-> id  INT(10)  NOT NULL  UNIQUE  PRIMARY KEY  ,\n-> name  VARCHAR(20)  NOT NULL ,\n-> sex  VARCHAR(4)  ,\n-> birth  YEAR,\n-> department  VARCHAR(20) ,\n-> address  VARCHAR(50)\n-> );\nQuery OK, 0 rows affected, 1 warning (0.07 sec)")]),t._v(" "),a("p",[t._v("score的创建：\nmysql> CREATE  TABLE  score (\n-> id  INT(10)  NOT NULL  UNIQUE  PRIMARY KEY  AUTO_INCREMENT ,\n-> stu_id  INT(10)  NOT NULL ,\n-> c_name  VARCHAR(20) ,\n-> grade  INT(10)\n-> );")]),t._v(" "),a("h1",{attrs:{id:"二、基本命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、基本命令"}},[t._v("#")]),t._v(" 二、基本命令")]),t._v(" "),a("h2",{attrs:{id:"part1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#part1"}},[t._v("#")]),t._v(" part1")]),t._v(" "),a("p",[t._v("(命令不区分大小写)")]),t._v(" "),a("p",[t._v("exit//退出")]),t._v(" "),a("p",[t._v("（以下命令要分号结尾，否则会出现无限的“--\x3e”符号让你输入）")]),t._v(" "),a("p",[t._v("show databases;   //显示已有的数据库。 mysql默认自带了"),a("strong",[t._v("4")]),t._v("个数据库。")]),t._v(" "),a("p",[t._v("use (数据库名);        //表示正在使用对应的数据库")]),t._v(" "),a("p",[t._v("create database （数据库名）;  //建立一个新的数据库")]),t._v(" "),a("p",[t._v("show tables;           //查看"),a("strong",[t._v("某个")]),t._v("数据库下有哪些表")]),t._v(" "),a("h2",{attrs:{id:"part2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#part2"}},[t._v("#")]),t._v(" part2")]),t._v(" "),a("p",[t._v("select version();   //查看当前mysql版本号")]),t._v(" "),a("p",[t._v("rowback    //撤销一步")]),t._v(" "),a("p",[t._v("\\c   //强制停止当前语句（可以跳出“--\x3e”死循环）")]),t._v(" "),a("h1",{attrs:{id:"三、sql语句分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、sql语句分类"}},[t._v("#")]),t._v(" 三、SQL语句分类")]),t._v(" "),a("h2",{attrs:{id:"dol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dol"}},[t._v("#")]),t._v(" DOL")]),t._v(" "),a("p",[t._v("数据库查询语言(凡是带有select关键字的都是查询语句)")]),t._v(" "),a("p",[t._v("select .....;")]),t._v(" "),a("p",[t._v("注：select本身是不会对原本的数据库进行修改操作的。")]),t._v(" "),a("h2",{attrs:{id:"dml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dml"}},[t._v("#")]),t._v(" DML")]),t._v(" "),a("p",[t._v("数据库操作语言(凡是对表当中的数据进行增删改的都是DML)")]),t._v(" "),a("p",[t._v("insert(增)")]),t._v(" "),a("p",[t._v("delete(删)")]),t._v(" "),a("p",[t._v("update(改)")]),t._v(" "),a("p",[t._v("注DML主要操作的是"),a("u",[t._v("表中的数据")])]),t._v(" "),a("h2",{attrs:{id:"ddl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ddl"}},[t._v("#")]),t._v(" DDL")]),t._v(" "),a("p",[t._v("数据定义语言(凡是带有create、drop、alter的都是DDL)")]),t._v(" "),a("p",[t._v("注：DDL主要操作的是"),a("u",[t._v("表的结构")]),t._v("，而不是表中的数据。")]),t._v(" "),a("p",[t._v("create:新建")]),t._v(" "),a("p",[t._v("drop:删除")]),t._v(" "),a("p",[t._v("alter：修改")]),t._v(" "),a("h2",{attrs:{id:"tcl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcl"}},[t._v("#")]),t._v(" TCL")]),t._v(" "),a("p",[t._v("事务控制语言")]),t._v(" "),a("p",[t._v("commit;   //事务提交")]),t._v(" "),a("p",[t._v("rollback;  //事务回报")]),t._v(" "),a("h2",{attrs:{id:"dcl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dcl"}},[t._v("#")]),t._v(" DCL")]),t._v(" "),a("p",[t._v("数据控制语言")]),t._v(" "),a("p",[t._v("grant;     //授权")]),t._v(" "),a("p",[t._v("revoke;\t//撤销权限")]),t._v(" "),a("h1",{attrs:{id:"四、导入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、导入数据"}},[t._v("#")]),t._v(" 四、导入数据")]),t._v(" "),a("p",[t._v("mysql> source  路径+文件名")]),t._v(" "),a("p",[t._v("注：路径不能用中文")]),t._v(" "),a("p",[t._v("查看表中数据： select * from 表名；")]),t._v(" "),a("p",[t._v("查看表的结构：desc 表名;        //<---desc是describe的缩写，可以用原词作命令")]),t._v(" "),a("h1",{attrs:{id:"五、查询-单表查询part1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、查询-单表查询part1"}},[t._v("#")]),t._v(" 五、查询(单表查询part1)")]),t._v(" "),a("h2",{attrs:{id:"_1-查询一个字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-查询一个字段"}},[t._v("#")]),t._v(" 1.查询一个字段")]),t._v(" "),a("p",[t._v("select 字段名 from 表名;           //select 和from都是关键字，字段名和表名都是标识符")]),t._v(" "),a("h2",{attrs:{id:"_2-查询多个字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-查询多个字段"}},[t._v("#")]),t._v(" 2.查询多个字段")]),t._v(" "),a("p",[t._v("select 字段名1，字段名2，....，字段名n   from   表名;")]),t._v(" "),a("h2",{attrs:{id:"_3-查询所有字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-查询所有字段"}},[t._v("#")]),t._v(" 3.查询所有字段")]),t._v(" "),a("p",[t._v("方法一，把所有字段都写上：")]),t._v(" "),a("p",[t._v("​\t\tselect 字段名1，字段名2，....，字段名n   from   表名;")]),t._v(" "),a("p",[t._v("方法二，使用*：   //缺点：效率低，可读性差")]),t._v(" "),a("p",[t._v("​\t\tselect  *   from   表名;      //回想一下查看表中数据的命令")]),t._v(" "),a("h2",{attrs:{id:"_4-查询所有字段并去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-查询所有字段并去重"}},[t._v("#")]),t._v(" 4.查询所有字段并去重")]),t._v(" "),a("p",[t._v("select    distinct   字段名   from   表名     //distinct关键字必须出现在所有字段名之前")]),t._v(" "),a("h2",{attrs:{id:"_5-给查询的列起别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-给查询的列起别名"}},[t._v("#")]),t._v(" 5.给查询的列起别名")]),t._v(" "),a("p",[t._v("select   (字段名  as  自定义新字段名)   from 表名;")]),t._v(" "),a("p",[t._v("//只是修改名字后显示出来，原本的数据库没有改变。")]),t._v(" "),a("p",[t._v("//若字段名有空格，要以  "),a("strong",[t._v("‘新字段名’")]),t._v(" 的形式写入命令（字符串统一使用单引号）。as可以用空格代替。")]),t._v(" "),a("p",[t._v("可以对字段使用数学表达式，例如：")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  score"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以用  as  给score*12换名")]),t._v("\n")])])]),a("p",[t._v("会显示：")]),t._v(" "),a("p",[t._v("+----------------------+-----------------------+")]),t._v(" "),a("p",[t._v("​     name              |        score*12")]),t._v(" "),a("p",[t._v("+----------------------+-----------------------+")]),t._v(" "),a("p",[t._v("|      .................        .......................   |")]),t._v(" "),a("h2",{attrs:{id:"_6-条件查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-条件查询"}},[t._v("#")]),t._v(" 6.条件查询")]),t._v(" "),a("h3",{attrs:{id:"_6-1关系运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1关系运算符"}},[t._v("#")]),t._v(" 6.1关系运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("=")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("等于")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<> 或 !=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<、<=、>、>=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小(大)(等)于，")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("between (a)  and (b)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v(">=a   && <=b")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("is null")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("为空")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("and")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("与")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("or")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("或")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("in")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("包含,相当于多个or")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("not")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("非")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("like")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("模糊查询，支持 % 或 下划线 匹配")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("%")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("匹配任意字符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("下划线（_）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("匹配一个字符")])])])]),t._v(" "),a("h3",{attrs:{id:"_6-2-条件查询语法格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-条件查询语法格式"}},[t._v("#")]),t._v(" 6.2 条件查询语法格式")]),t._v(" "),a("p",[t._v("（为了直观，句子将不写在一行里）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" \n\n      字段"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，字段"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，字段"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n      表名\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\n​      条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-3-比较不熟悉的关系运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-比较不熟悉的关系运算符"}},[t._v("#")]),t._v(" 6.3 比较不熟悉的关系运算符")]),t._v(" "),a("h4",{attrs:{id:"_6-3-1-in-的用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-1-in-的用法"}},[t._v("#")]),t._v(" 6.3.1  in    的用法")]),t._v(" "),a("p",[t._v("例：筛选出工资为5000 或 6000 或 7000的所有员工")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("不用"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v("："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("     num "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  tab1 \n\n​\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("  wage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v("  wage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v("  wage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n使用"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("     num "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  tab1 \n\n​\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("  wage  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-3-2-like-的用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-2-like-的用法"}},[t._v("#")]),t._v(" 6.3.2  like   的用法")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  name  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("   name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%A%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("筛选出姓名中含有“A”的姓名。")]),t._v(" "),a("p",[t._v("其他例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n找出名字以T结尾的：\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  name  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("   name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%T"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n找出名字以K开始的：\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  name  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("   name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"K%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n找出第二个字母是A的：\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  name  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("   name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_A%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n找出第三个字母是R的：\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  name  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("   name  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__R%"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("从上例可以看出，所谓的模糊查找本质上和正则表达式匹配类似。")]),t._v(" "),a("h1",{attrs:{id:"六、排序-单表查询part2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、排序-单表查询part2"}},[t._v("#")]),t._v(" 六、排序(单表查询part2)")]),t._v(" "),a("h2",{attrs:{id:"_1-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-语法"}},[t._v("#")]),t._v(" 1.语法")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n​"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" \n\n​\t\t字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n​"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\t表名\n\n​"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n\n​\t\t指定字段名  ；    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//==默认升序==")]),t._v("\n")])])]),a("p",[t._v("指定降序，则要写成       指定字段名\tdesc   ;")]),t._v(" "),a("p",[t._v("指定升序，则要写成       指定字段名\tasc   ;")]),t._v(" "),a("h2",{attrs:{id:"_2-多字段排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-多字段排序"}},[t._v("#")]),t._v(" 2.多字段排序")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" \n\n​\t\t字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n​"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\t表名\n\n​"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n\n​\t\t指定字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   （指定顺序）  ，指定字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  （指定顺序），"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("  ；\n")])])]),a("p",[a("u",[t._v("从左到右优先排序")]),t._v("；")]),t._v(" "),a("h2",{attrs:{id:"_3-根据字段位置排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-根据字段位置排序"}},[t._v("#")]),t._v(" 3.根据字段位置排序")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("    name   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("p",[t._v("(指定字段名所在的列数，例句中指定第二列的字段) ;")]),t._v(" "),a("h2",{attrs:{id:"_4-综合案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-综合案例"}},[t._v("#")]),t._v(" 4.综合案例")]),t._v(" "),a("p",[t._v("找出工资在1250和3000之间的员工信息，要求按照薪资降序排列。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  \n\n​\t\tename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("sal\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\n​\t\tsal  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1250")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n\n​\t\tsal  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[t._v("语句执行顺序：")]),t._v(" "),a("p",[t._v("​\t\tstep1：from")]),t._v(" "),a("p",[t._v("​\t\tstep2：where")]),t._v(" "),a("p",[t._v("​\t\tstep3：select")]),t._v(" "),a("p",[t._v("​\t\tstep4：order  by")]),t._v(" "),a("h1",{attrs:{id:"七、数据处理函数-单表查询part3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、数据处理函数-单表查询part3"}},[t._v("#")]),t._v(" 七、数据处理函数(单表查询part3)")]),t._v(" "),a("h2",{attrs:{id:"_1-单行处理函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-单行处理函数"}},[t._v("#")]),t._v(" 1.单行处理函数")]),t._v(" "),a("p",[t._v("特点：输入一行，输出一行。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("lower/upper")]),t._v(" "),a("th",[t._v("转换成小(大)写")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("substr")]),t._v(" "),a("td",[t._v("取子串")])]),t._v(" "),a("tr",[a("td",[t._v("length")]),t._v(" "),a("td",[t._v("取长度")])]),t._v(" "),a("tr",[a("td",[t._v("trim(字符串)")]),t._v(" "),a("td",[t._v("去空格")])]),t._v(" "),a("tr",[a("td",[t._v("str_to_date")]),t._v(" "),a("td",[t._v("将字符串转换成日期")])]),t._v(" "),a("tr",[a("td",[t._v("date_format")]),t._v(" "),a("td",[t._v("格式化日期")])]),t._v(" "),a("tr",[a("td",[t._v("round(数值，保留几位小数(-1是保留到十位))")]),t._v(" "),a("td",[t._v("四舍五入")])]),t._v(" "),a("tr",[a("td",[t._v("rand()   (直接使用会生成[0,1)的随机数)")]),t._v(" "),a("td",[t._v("生成随机数")])]),t._v(" "),a("tr",[a("td",[t._v("ifnull(数据，该数据的null情况用什么值取代)")]),t._v(" "),a("td",[t._v("将null转换成一个具体值")])]),t._v(" "),a("tr",[a("td",[t._v("concat(字符串1，字符串2)")]),t._v(" "),a("td",[t._v("连接两个字符串")])])])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("用法："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("    函数名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("参数"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，参数"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("   自定义列名     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注：null加上数值的结果还是null，故要使用ifnull修改最初的null值。")]),t._v(" "),a("p",[a("strong",[t._v("分支处理")]),t._v("(类似于编程里的if else语句)：")]),t._v(" "),a("p",[t._v("例：当员工的工作岗位时MANAGER时，工资上调10%；当工作岗位时SALESMAN时，工资上调50%；其他不变。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\tename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("  job  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MANAGER'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("  sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SALESMAN'")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("   sal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" sal  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("  newsal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n\n​"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" \n\n​\t\temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-多行处理函数-分组函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-多行处理函数-分组函数"}},[t._v("#")]),t._v(" 2.多行处理函数(分组函数)")]),t._v(" "),a("p",[t._v("特点：输入多行，输出一行。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("count(字段名)")]),t._v(" "),a("th",[t._v("计数")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("sum(字段名)")]),t._v(" "),a("td",[t._v("求和")])]),t._v(" "),a("tr",[a("td",[t._v("avg(字段名)")]),t._v(" "),a("td",[t._v("平均值")])]),t._v(" "),a("tr",[a("td",[t._v("max(字段名)")]),t._v(" "),a("td",[t._v("最大值")])]),t._v(" "),a("tr",[a("td",[t._v("min(字段名)")]),t._v(" "),a("td",[t._v("最小值")])])])]),t._v(" "),a("p",[t._v("注：1.分组函数在使用的时候必须先进行分组，然后使用。")]),t._v(" "),a("p",[t._v("2.如果没有对数据进行分组，整张表默认为一组。")]),t._v(" "),a("p",[t._v("3.分组函数会自动处理null值。")]),t._v(" "),a("p",[t._v("4.count(具体字段)：表示统计该字段下所有不为null的元素的个数。")]),t._v(" "),a("p",[t._v("count(*):统计表当中的总行数。")]),t._v(" "),a("p",[t._v("5.分组函数"),a("u",[t._v("不能")]),t._v("中介用在 where 语句中。")]),t._v(" "),a("h1",{attrs:{id:"八、分组查询-单表查询part4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、分组查询-单表查询part4"}},[t._v("#")]),t._v(" 八、分组查询(单表查询part4)")]),t._v(" "),a("p",[t._v("实际需求：先分组，再对每一组的数据进行操作。")]),t._v(" "),a("p",[t._v("例：计算每个部门的工资和")]),t._v(" "),a("p",[t._v("计算每个工作岗位的平均薪资")]),t._v(" "),a("p",[t._v("找出每个工作岗位的最高薪资")]),t._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//==若有 group   by，则应该只能写group  by   后面跟着的字段名==,或分组函数")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//后面只能跟  参加分组的字段，以及分组函数")]),t._v("\n\n​\t\t（字段名）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//作用和where 差不多，但是必须接在group  by后面")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("执行顺序：")]),t._v(" "),a("p",[t._v("from  --\x3e  where  --\x3e  group by  --\x3e  select  --\x3e  order by")]),t._v(" "),a("p",[t._v("例：找出"),a("u",[t._v("每个部门、不同岗位")]),t._v("的最高薪资")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\tdeptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n\n​\t\tdeptno  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("综合案例：")]),t._v(" "),a("p",[t._v("找出每个岗位的平均薪资，要求平均薪资大于1500的，除MANAGER岗位之外，要求按照平均薪资降序排序。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\tjob  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("  avgsal\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\n​\t\tjob  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MANAGER'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n\n​\t\tjob\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("\n\n​\t\tavgsal  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h1",{attrs:{id:"九、连接查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、连接查询"}},[t._v("#")]),t._v(" 九、连接查询")]),t._v(" "),a("p",[a("strong",[t._v("注：可以先去了解一下关系数据库的连接运算")]),t._v("。")]),t._v(" "),a("p",[t._v("连接查询的"),a("u",[t._v("目的")]),t._v("：多张表联合起来查询数据。")]),t._v(" "),a("p",[t._v("连接的底层原理是"),a("u",[t._v("笛卡尔积")]),t._v("。若连接查询不附带任何注释，则会返回一个数据库字段之间笛卡尔积的结果。")]),t._v(" "),a("p",[t._v("简单案例：查询每一个人所在的工作部门。")]),t._v(" "),a("p",[t._v("//SQL92的解法")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("   \n\n​\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最好将字段所属的表名通过这种方式标出")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp  e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  dept  d            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表名空格后面为别名。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\n​\t    emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  dept"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表的连接条件，通过and可以写入进一步的过滤条件")]),t._v("\n")])])]),a("h2",{attrs:{id:"_9-1-内连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-内连接"}},[t._v("#")]),t._v(" 9.1 内连接")]),t._v(" "),a("h3",{attrs:{id:"_9-1-1-等值连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-1-等值连接"}},[t._v("#")]),t._v(" 9.1.1 等值连接")]),t._v(" "),a("p",[t._v("上例SQL99的语法")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp e\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("\n\n​\t\tdept d\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//独立出来的连接条件")]),t._v("\n\n​\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("SQL92缺点：结构不清晰，表的连接条件，和后期进一步筛选的条件都放在了where中。")]),t._v(" "),a("p",[t._v("SQL99的优点：表连接的条件是独立的，连接之后，若还要进一步筛选，再写where语句。")]),t._v(" "),a("p",[t._v("SQL99连接语法：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\ta\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("\n\n​\t\tb\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\ta和b的连接条件\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\n​\t\t筛选条件\n")])])]),a("h3",{attrs:{id:"_9-1-2非等值连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-2非等值连接"}},[t._v("#")]),t._v(" 9.1.2非等值连接")]),t._v(" "),a("p",[t._v("where   下的筛选条件不是一个等量关系")]),t._v(" "),a("h3",{attrs:{id:"_9-1-3自连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-3自连接"}},[t._v("#")]),t._v(" 9.1.3自连接")]),t._v(" "),a("p",[t._v("样例表：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("员工编号")]),t._v(" "),a("th",[t._v("姓名")]),t._v(" "),a("th",[t._v("上司编号")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("7369")]),t._v(" "),a("td",[t._v("SMITH")]),t._v(" "),a("td",[t._v("7902")])]),t._v(" "),a("tr",[a("td",[t._v("7499")]),t._v(" "),a("td",[t._v("ALLEN")]),t._v(" "),a("td",[t._v("7698")])]),t._v(" "),a("tr",[a("td",[t._v("7521")]),t._v(" "),a("td",[t._v("WARD")]),t._v(" "),a("td",[t._v("7698")])]),t._v(" "),a("tr",[a("td",[t._v("7566")]),t._v(" "),a("td",[t._v("JONES")]),t._v(" "),a("td",[t._v("7839<==")])]),t._v(" "),a("tr",[a("td",[t._v("7654")]),t._v(" "),a("td",[t._v("MARTIN")]),t._v(" "),a("td",[t._v("7698")])]),t._v(" "),a("tr",[a("td",[t._v("7698")]),t._v(" "),a("td",[t._v("BLAKE")]),t._v(" "),a("td",[t._v("7839<==")])]),t._v(" "),a("tr",[a("td",[t._v("7782")]),t._v(" "),a("td",[t._v("CLARK")]),t._v(" "),a("td",[t._v("7839<==")])]),t._v(" "),a("tr",[a("td",[t._v("7788")]),t._v(" "),a("td",[t._v("SCOTT")]),t._v(" "),a("td",[t._v("7566")])]),t._v(" "),a("tr",[a("td",[t._v("7839<==")]),t._v(" "),a("td",[t._v("KING")]),t._v(" "),a("td",[t._v("NULL")])]),t._v(" "),a("tr",[a("td",[t._v("7844")]),t._v(" "),a("td",[t._v("TURNER")]),t._v(" "),a("td",[t._v("7698")])]),t._v(" "),a("tr",[a("td",[t._v("7876")]),t._v(" "),a("td",[t._v("ANAMS")]),t._v(" "),a("td",[t._v("7788")])]),t._v(" "),a("tr",[a("td",[t._v("7900")]),t._v(" "),a("td",[t._v("JAMES")]),t._v(" "),a("td",[t._v("7698")])]),t._v(" "),a("tr",[a("td",[t._v("7902")]),t._v(" "),a("td",[t._v("FORD")]),t._v(" "),a("td",[t._v("7566")])]),t._v(" "),a("tr",[a("td",[t._v("7934")]),t._v(" "),a("td",[t._v("MILLER")]),t._v(" "),a("td",[t._v("7782")])])])]),t._v(" "),a("p",[t._v("内连接用法：查询员工的上司，要求显示员工名和对应的领导名。")]),t._v(" "),a("p",[t._v("注：同一个表用两个名称")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\ta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("姓名   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'员工名'")]),t._v("  ，  b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("姓名   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("   ‘上司名’\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp  a\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" \n\n​\t\temp  b\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\ta"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("上司编号  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("员工编号\n")])])]),a("h2",{attrs:{id:"_9-2-外连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-外连接"}},[t._v("#")]),t._v(" 9.2 外连接")]),t._v(" "),a("p",[t._v("例：给定一个存储员工信息的表emp  ，一个存储部门信息的表dept。")]),t._v(" "),a("p",[t._v("要求连接员工姓名与他对应的部门，并将空的部门也一起显示。（因为有可能有的部门的人都不在表emp中）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("             （右外连接或右链接） （emp  和  dept之间存在主次关系。dept为主）\n\n​\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp  e    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("  dept  d       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//right 表示 右边的表中没有匹配成功的记录也要\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t显示")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//(左外连接)\t\tdept   d   **left**    emp   e            这句话与上句话相同")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关键字right表示右边的表一定要全部显示出，left同理。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"_9-3-多表连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-多表连接"}},[t._v("#")]),t._v(" 9.3 多表连接")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\t a\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("     b\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\t a 和 b 的连接条件\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("     c\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\t a 和 c 的连接条件\n\n。\n\n。\n\n。\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("     n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\t a  和  n  的连接条件  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("u",[t._v("注：内连接和外连接可以混合使用。")])]),t._v(" "),a("p",[t._v("例：找出每个员工的部门名称以及工资等级，要求：显示出员工名、部门名、薪资、薪资等级。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sal "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("grade\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp  e\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" \n\n​\t\tdept  d\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("\n\n​\t\tsalgrade  s\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sal  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v("   s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("losal    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v("   s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hisal  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"_9-4-union-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-union-关键字"}},[t._v("#")]),t._v(" 9.4 union 关键字")]),t._v(" "),a("p",[t._v("数据量大的情况下union比普通连接效率高")]),t._v(" "),a("p",[t._v("前提：连接的两个表选出的列数相同")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  emp  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("  job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MANAGER'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  job "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("  job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SALESMAN'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h1",{attrs:{id:"十、子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十、子查询"}},[t._v("#")]),t._v(" 十、子查询")]),t._v(" "),a("p",[t._v("select语句中嵌套select语句，嵌入的select语句称为子查询")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("（"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("（"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("（"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("h2",{attrs:{id:"_10-1-where中的子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-where中的子查询"}},[t._v("#")]),t._v(" 10.1 where中的子查询")]),t._v(" "),a("p",[t._v("例：找出比最低工资高的员工姓名和工资。")]),t._v(" "),a("p",[t._v("错误方法：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("：\n\n​\t\tename  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  sal\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("\n\n​\t\tsal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此句错误，min这种多组函数使用前必须先分组。")]),t._v("\n")])])]),a("p",[t._v("思路：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//step1：查询最低工资")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   emp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//假设查出为800")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//step2：找出大于最小工资的员工")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("    ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sal   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   emp   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("   sal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("800")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//step3：合并前两步")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("    ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sal   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   emp   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("   sal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  emp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_10-2-from中的子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-from中的子查询"}},[t._v("#")]),t._v(" 10.2 from中的子查询")]),t._v(" "),a("p",[t._v("这种子查询可以将子查询的查询结果当成一个临时表。（技巧）")]),t._v(" "),a("p",[t._v("例：找出每个岗位的平均工资的薪资等级。")]),t._v(" "),a("p",[t._v("思路：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//step1：找出每个岗位的平均工资（按照岗位分组求平均值）")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("   job  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   emp    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("   job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//step2：第一步得到了临时表 t 。现有薪资评级表 salgrade。")]),t._v("\n")])])]),a("p",[t._v("t  和  salgrade 连接")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("grade\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\tt\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("\n\n​\t\tsalgrade s\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v("   s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("losal   ans  s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hisal "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//step3：合并前两步")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\tt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("grade\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  job "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("  avgsal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("  emp  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v("  job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  t\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("\n\n​\t\tsalgrade s\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("avgsal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v("   s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("losal   ans  s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hisal "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_10-3-select中的子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-select中的子查询"}},[t._v("#")]),t._v(" 10.3 select中的子查询")]),t._v(" "),a("p",[t._v("例：找出每个员工的部门名称，要求显示员工名，部门名。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   dept  d    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("    e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" \t\t\tdname\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注：对于每一条记录，若子查询超过一条就会报错。")]),t._v(" "),a("h1",{attrs:{id:"十一、分页查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十一、分页查询"}},[t._v("#")]),t._v(" 十一、分页查询")]),t._v(" "),a("h2",{attrs:{id:"_11-1-limit关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-limit关键字"}},[t._v("#")]),t._v(" 11.1 limit关键字")]),t._v(" "),a("p",[t._v("目的：将查询结果集的一部分取出来。（搜索引擎搜索结果的分页）")]),t._v(" "),a("p",[t._v("用法：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v("    startindex，length       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//写在order  by  后面")]),t._v("\n")])])]),a("p",[t._v("例：按照薪资排序，取出排名前5的员工。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("  \n\n​\t\tename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sal\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\temp\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" \n\n​\t\tsal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//也可以写成  limit   5。表中的记录从0开始。")]),t._v("\n")])])]),a("h2",{attrs:{id:"_11-2-分页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-分页"}},[t._v("#")]),t._v(" 11.2 分页")]),t._v(" "),a("p",[t._v("每页显示pageSize条记录")]),t._v(" "),a("p",[t._v("​\t\t第pageNo页：limit （pageNo - 1）* pageSize  ， pageSize")]),t._v(" "),a("p",[t._v("如：\n第1页：limit 0，3    [0  1  2]")]),t._v(" "),a("p",[t._v("第2页：limit 3，3    [3  4  5]")]),t._v(" "),a("p",[t._v("第3页：limit 6，3    [6  7  8]")]),t._v(" "),a("p",[t._v("第4页：limit 9，3    [0  1  2]")]),t._v(" "),a("h1",{attrs:{id:"十二、建表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十二、建表"}},[t._v("#")]),t._v(" 十二、建表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("创建表格式："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  表名（字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  数据类型，字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  数据类型，。。）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n删除表格式："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exists")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("要删除的表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n添加记录："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v("   表名  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("字段名和值一一对应"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("常见数据类型：varchar(动态分配字符串内存)，char(静态分配)，int，bigint，float，double，date(短日期)，datetime（长日期），clob(字符大对象)，blob(二进制大对象)")]),t._v(" "),a("p",[t._v("clob：可以存储最多4G 的大字符串（如文章）。")]),t._v(" "),a("p",[t._v("blob：存储图片、声音、视频等流媒体数据。需要使用IO流")]),t._v(" "),a("h2",{attrs:{id:"_12-1修改-update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-1修改-update"}},[t._v("#")]),t._v(" 12.1修改（update）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v("  \n\n​\t\t表名  \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v("  \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改具体值")]),t._v("\n\n​\t\t字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("值"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("值"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，。。。\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定特定条件的记录，不写where默认修改所有记录")]),t._v("\n")])])]),a("h2",{attrs:{id:"_12-2删除记录delete-dml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-2删除记录delete-dml"}},[t._v("#")]),t._v(" 12.2删除记录delete（DML）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   表名   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("；"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不写where会删除所有数据")]),t._v("\n")])])]),a("h2",{attrs:{id:"_12-3插入多条记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-3插入多条记录"}},[t._v("#")]),t._v(" 12.3插入多条记录")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v("  表名（字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("。。。）   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),t._v("\n\n（元组一），\n\n（元组二），\n\n。。。，\n\n（元组n）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//元组数据类型必须与第一行的字段名一一对应")]),t._v("\n")])])]),a("h2",{attrs:{id:"_12-4快捷命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-4快捷命令"}},[t._v("#")]),t._v(" 12.4快捷命令")]),t._v(" "),a("h3",{attrs:{id:"_12-4-1-快速创建表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-1-快速创建表"}},[t._v("#")]),t._v(" 12.4.1 快速创建表")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("   新表名   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   原表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//select语句可以按需求扩充内容（如where，order by等）")]),t._v("\n")])])]),a("h3",{attrs:{id:"_12-4-2-快速删除数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-2-快速删除数据"}},[t._v("#")]),t._v(" 12.4.2 快速删除数据")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("truncate")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  表名 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//与‘delete   from   表名’     相同")]),t._v("\n")])])]),a("p",[t._v("truncate和delete的区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("truncate")]),t._v(" "),a("th",[t._v("delete")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("删除效率相对比较高，表被依次截断，物理删除")]),t._v(" "),a("td",[t._v("表中的数据被删除了，但是删除的数据在硬盘上的真实存储空间不会被释放")])]),t._v(" "),a("tr",[a("td",[t._v("缺点：不支持撤销操作")]),t._v(" "),a("td",[t._v("缺点：删除效率较低（一亿条记录时要1小时才能删完）")])]),t._v(" "),a("tr",[a("td",[t._v("有点：快速（数据量非常大的时候推荐使用。一亿条记录是删除时间不到1秒）")]),t._v(" "),a("td",[t._v("优点：支持撤销操作")])]),t._v(" "),a("tr",[a("td",[t._v("是DDL语句")]),t._v(" "),a("td",[t._v("是DML语句")])])])]),t._v(" "),a("h1",{attrs:{id:"十三、约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十三、约束"}},[t._v("#")]),t._v(" 十三、约束")]),t._v(" "),a("p",[t._v("目的：确保数据的完整性、有效性。")]),t._v(" "),a("p",[t._v("常见约束：非空约束(not null)、唯一性约束(unique)、主键约束(primary key ，PK)、外键约束(foreign key，FK)、检查约束(check)")]),t._v(" "),a("h2",{attrs:{id:"_13-1-非空约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-非空约束"}},[t._v("#")]),t._v(" 13.1 非空约束")]),t._v(" "),a("p",[t._v("not null 约束的字段不能为NULL。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  exist  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n    id  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    name   carchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_13-2-唯一性约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-唯一性约束"}},[t._v("#")]),t._v(" 13.2 唯一性约束")]),t._v(" "),a("p",[t._v("unique约束的字段不能重复，但是可以为NULL。")]),t._v(" "),a("p",[t._v("使用例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  exist  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n    id  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    name   carchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//该字段的内容不能重复")]),t._v("\n\n    email  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("推广：不同字段在特定条件下可以联合设置为唯一性约束。（如：两个人姓名相同，但是电话号码不同。或者说一个人有多个电话号码记录）")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  exist  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n\tid  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\tname   carchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ，   \n\n\temail  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  ，\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//联合唯一性")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("下例为unique和not  null  联合使用")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  exist  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n\tid  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\tname   carchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//该字段的内容不能重复也不能为空")]),t._v("\n\n\temail  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这种联合的效果就是主键约束，也就是说，可以直接用PK约束实现前两种约束的联合。")]),t._v(" "),a("h2",{attrs:{id:"_13-3-主键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-主键约束"}},[t._v("#")]),t._v(" 13.3 主键约束")]),t._v(" "),a("p",[t._v("术语：主键约束、主键字段、主键值")]),t._v(" "),a("p",[t._v("主键例：学号、身份证......")]),t._v(" "),a("p",[t._v("建议设为主键的类型：int、bigint、char等。（varchar不建议）")]),t._v(" "),a("p",[a("strong",[t._v("注：一个表中只能设置一个主键")])]),t._v(" "),a("p",[t._v("特征：not  null  、 unique")]),t._v(" "),a("h3",{attrs:{id:"_13-3-1-单一主键和复合主键-分类一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-1-单一主键和复合主键-分类一"}},[t._v("#")]),t._v(" 13.3.1 单一主键和复合主键（分类一）")]),t._v(" "),a("p",[t._v("使用例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  exist  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n\tid  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\tname   carchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("   ， \n\n\temail  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("复合主键使用例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  exist  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n\tid  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\tname   carchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ，    \n\n\temail  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v("（id，name）     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//号码、姓名同时相同时才算重复。")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_13-3-2-自然主键和业务主键-分类二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-2-自然主键和业务主键-分类二"}},[t._v("#")]),t._v(" 13.3.2 自然主键和业务主键（分类二）")]),t._v(" "),a("p",[t._v("自然主键：主键值是一个自然数，和业务无关。<==使用较多")]),t._v(" "),a("p",[t._v("业务主键：主键值和业务关联，例如银行卡号。")]),t._v(" "),a("p",[t._v("自动维护主键值使用例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  exist  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_vip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n\tid  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  \n\n\tname   carchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ，\n\n\temail  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_13-4-外键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-4-外键约束"}},[t._v("#")]),t._v(" 13.4 外键约束")]),t._v(" "),a("p",[t._v("相关术语：外键约束、外键字段(添加了外键约束的字段)、外键值(可以为null)。")]),t._v(" "),a("p",[t._v("应用场景：处理学生和班级时，应当把班级额外设置为一个表再对学生进行外键约束。（t_class   ,  t_student）")]),t._v(" "),a("p",[t._v("t_class")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("classno")]),t._v(" "),a("th",[t._v("classname")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("100")]),t._v(" "),a("td",[t._v("一班")])]),t._v(" "),a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("二班")])])])]),t._v(" "),a("p",[t._v("t_student")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("no")]),t._v(" "),a("th",[t._v("name")]),t._v(" "),a("th",[t._v("cno")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("jack")]),t._v(" "),a("td",[t._v("100")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("lucy")]),t._v(" "),a("td",[t._v("100")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("lilei")]),t._v(" "),a("td",[t._v("100")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("bob")]),t._v(" "),a("td",[t._v("100")])]),t._v(" "),a("tr",[a("td",[t._v("5")]),t._v(" "),a("td",[t._v("ben")]),t._v(" "),a("td",[t._v("101")])]),t._v(" "),a("tr",[a("td",[t._v("6")]),t._v(" "),a("td",[t._v("alice")]),t._v(" "),a("td",[t._v("101")])]),t._v(" "),a("tr",[a("td",[t._v("7")]),t._v(" "),a("td",[t._v("alex")]),t._v(" "),a("td",[t._v("100")])]),t._v(" "),a("tr",[a("td",[t._v("8")]),t._v(" "),a("td",[t._v("zhangsan")]),t._v(" "),a("td",[t._v("101")])])])]),t._v(" "),a("p",[t._v("t_class 是父表，t_student是子表。")]),t._v(" "),a("p",[t._v("删除表的顺序：先删子，再删父。")]),t._v(" "),a("p",[t._v("创建表的顺序：先创建父，再创建子。")]),t._v(" "),a("p",[t._v("删除数据的顺序：先删子，再删父。")]),t._v(" "),a("p",[t._v("插入数据的顺序：先插入父，再插入子。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  exist   t_student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  exist   t_class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n​\t\tclassno  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n​\t\tclassname   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("no")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n​\t\tname  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n​\t\tcno  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v("  t_class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h1",{attrs:{id:"十四、存储引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十四、存储引擎"}},[t._v("#")]),t._v(" 十四、存储引擎")]),t._v(" "),a("p",[t._v("注：存储引擎是mysql的特有术语。")]),t._v(" "),a("p",[t._v("存储引擎即数据内容的存储方式，如：ANSI,UTF-8等。")]),t._v(" "),a("p",[t._v("查看mysql支持哪些存储引擎：show  engines")]),t._v(" "),a("p",[t._v("展示新建表的存储引擎：show  create  table  (表名)")]),t._v(" "),a("p",[t._v("指定引擎使用例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("  t_product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\n​\t\tid  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n​\t\tname  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("engine")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("InnoDB")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("charset")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("utf8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_14-1-my-isam存储引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-my-isam存储引擎"}},[t._v("#")]),t._v(" 14.1 My ISAM存储引擎")]),t._v(" "),a("p",[t._v("使用三个文件表示每一个表：")]),t._v(" "),a("p",[t._v("​\t\t格式文件：存储表结构的定义   xxx.frm")]),t._v(" "),a("p",[t._v("​\t\t数据文件：存储表行的内容  xxx.MYD")]),t._v(" "),a("p",[t._v("​\t\t索引(目录)文件：存储表上索引   xxx.MYI")]),t._v(" "),a("p",[t._v("特点：可以转换为压缩、只读表来节省空间。")]),t._v(" "),a("h2",{attrs:{id:"_14-2-innodb存储引擎-默认引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-innodb存储引擎-默认引擎"}},[t._v("#")]),t._v(" 14.2 InnoDB存储引擎（默认引擎）")]),t._v(" "),a("p",[t._v("InnoDB支持事务，支持数据库崩溃后自动恢复机制")]),t._v(" "),a("p",[t._v("特点：非常安全，效率不高，不能压缩或转换为只读。")]),t._v(" "),a("p",[t._v("InnoDB管理的表的特征：")]),t._v(" "),a("p",[t._v("​\t\t每个InnoDB表再数据库目录中以 .frm  格式文件表示")]),t._v(" "),a("p",[t._v("​\t\tInnoDB表空间tablespace被用于存储表的内容")]),t._v(" "),a("p",[t._v("​\t\t提供一组用来记录事务性活动的日志文件")]),t._v(" "),a("p",[t._v("​\t\t用COMMIT(提交)，SAVEPOINT以及ROOLBACK支持事务处理")]),t._v(" "),a("p",[t._v("​\t\t提供全ACID兼容")]),t._v(" "),a("p",[t._v("​\t\t在mysql服务器崩溃后会自动回复")]),t._v(" "),a("p",[t._v("​\t\t多版本(MVCC)和行级锁定")]),t._v(" "),a("p",[t._v("​\t\t支持外键及引用的完整性，包括级联删除和更新")]),t._v(" "),a("h2",{attrs:{id:"_14-3-memory存储引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-memory存储引擎"}},[t._v("#")]),t._v(" 14.3 MEMORY存储引擎")]),t._v(" "),a("p",[t._v("数据存储在内存中，且行的长度固定")]),t._v(" "),a("p",[t._v("特点：查询速度快，不安全")]),t._v(" "),a("p",[t._v("MEMORY管理的表的特征：")]),t._v(" "),a("p",[t._v("​\t\t在数据库目录内，每个表均以  .frm  格式的文件表示。")]),t._v(" "),a("p",[t._v("​\t\t表数据及索引被存储在内存中")]),t._v(" "),a("p",[t._v("​\t\t表级锁机制")]),t._v(" "),a("p",[t._v("​\t\t不能包含TEXT 或 BLOB字段")]),t._v(" "),a("h1",{attrs:{id:"十五、事务-dml语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十五、事务-dml语句"}},[t._v("#")]),t._v(" 十五、事务(DML语句)")]),t._v(" "),a("p",[t._v("定义：一个事务是一个完整的业务逻辑。")]),t._v(" "),a("p",[t._v("事务特性：")]),t._v(" "),a("p",[t._v("​\t\tA(原子性)：事务是最小的工作单元，不可再分。")]),t._v(" "),a("p",[t._v("​\t\tC(一致性)：一系列操作必须同时成功或同时失败。")]),t._v(" "),a("p",[t._v("​\t\tI(隔离性)：不同事务之间不影响")]),t._v(" "),a("p",[t._v("​\t\tD(持久性)：保存内容，提供保障。")]),t._v(" "),a("p",[t._v("完整的业务逻辑例：")]),t._v(" "),a("p",[t._v("​\t\t业务：A转账10000元给B")]),t._v(" "),a("p",[t._v("​\t\t步骤：A的账户-10000，B的账户+10000。")]),t._v(" "),a("p",[t._v("这一系列操作必须同时成功或同时失败。")]),t._v(" "),a("p",[t._v("即，一个事务就是一系列的DML语句。")]),t._v(" "),a("p",[t._v("注：InnoDB会提供一组用来记录事务性活动的日志文件")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("p",[t._v("事务开启，写入日志")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n事务结束，写入日志          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//提交事务")]),t._v("\n\n\n\n提交事务："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),t._v(" ；语句\n\n回滚事务："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rollback")]),t._v(" ；语句     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//回到上一次提交的位置")]),t._v("\n\n关闭自动提交操作："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("start")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),t._v("；\n")])])]),a("h2",{attrs:{id:"_15-1-事务隔离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-事务隔离"}},[t._v("#")]),t._v(" 15.1 事务隔离")]),t._v(" "),a("p",[t._v("级别：")]),t._v(" "),a("p",[t._v("​\t\t读未提交：read  uncommitted(不提交也读到)\t\t\t最低级")]),t._v(" "),a("p",[t._v("​\t\t\t\t事务A读到事务B未提交的数据。易产生脏数据(Dirty  Read)。")]),t._v(" "),a("p",[t._v("​\t\t读已提交：read  committed  (提交了才能读到)")]),t._v(" "),a("p",[t._v("​\t\t\t\t事务A只能读到事务B提交之后的数据。")]),t._v(" "),a("p",[t._v("​\t\t\t\t不可重复读数据。如：事务开启后，第一次读到的数据是3条，当前事务还没有结束，可能第二次在读取的时候，读到的数据是4条，3不等于4。")]),t._v(" "),a("p",[t._v("​\t\t可重复读：repeatable   read\t(提交了也读不到)   //mysql默认级别")]),t._v(" "),a("p",[t._v("​\t\t\t\t读取的是数据的幻象，读到的都是事务刚开始时的数据。")]),t._v(" "),a("p",[t._v("​\t\t序列化：serializable\t\t\t最高级")]),t._v(" "),a("p",[t._v("​\t\t\t\t效率低，但是解决了所有的问题")]),t._v(" "),a("p",[t._v("​\t\t\t\t这种级别表示事务排队，不能并发。")]),t._v(" "),a("h1",{attrs:{id:"十六、索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十六、索引"}},[t._v("#")]),t._v(" 十六、索引")]),t._v(" "),a("p",[t._v("类似于书的目录，提高搜索效率。")]),t._v(" "),a("p",[t._v("mysql查询的方式：1.全表扫描。2.根据索引检索")]),t._v(" "),a("p",[t._v("索引必须排序。索引和TreeSet(底层是AVL)数据结构相同。")]),t._v(" "),a("p",[t._v("在mysql中，索引是一个B树。")]),t._v(" "),a("p",[t._v("复合索引：两个及以上字段联合起来添加一个索引。")]),t._v(" "),a("h2",{attrs:{id:"_16-1-语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-语法"}},[t._v("#")]),t._v(" 16.1 语法")]),t._v(" "),a("p",[t._v("创建索引")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  emp_ename_index  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("  emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​\t\t给emp表的ename字段添加索引，命名：emp_ename_index\n")])])]),a("p",[t._v("删除索引")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  emp_ename_index  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("  emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n​\t\t将emp表上的emp_ename_index索引对象删除\n")])])]),a("p",[t._v("检查是否有索引")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explain")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("   emp   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v("   ename  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("‘XXX’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_16-2-索引失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-索引失效"}},[t._v("#")]),t._v(" 16.2 索引失效")]),t._v(" "),a("p",[t._v("1.尽量避免模糊查询时以“%”开始。")]),t._v(" "),a("p",[t._v("2.使用 or 关键字时两边的字段都要有索引，否则不会调用索引。")]),t._v(" "),a("p",[t._v("3.使用复合索引的时候，没有使用左侧的列查找，索引会失效")]),t._v(" "),a("p",[t._v("4.在where中索引列若参与的运算，索引会失效。")]),t._v(" "),a("p",[t._v("5.在where中索引列使用了函数，索引会失效。")]),t._v(" "),a("p",[t._v("......")]),t._v(" "),a("h2",{attrs:{id:"_16-3索引分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-3索引分类"}},[t._v("#")]),t._v(" 16.3索引分类")]),t._v(" "),a("p",[t._v("索引是各种数据库进行优化的重要手段，优化的时候优先考虑的就是索引。")]),t._v(" "),a("p",[t._v("分类一：单一索引、复合索引。")]),t._v(" "),a("p",[t._v("分类二：主键索引、唯一性索引(在有unique约束的字段上添加索引)")]),t._v(" "),a("h1",{attrs:{id:"_17、视图-view"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17、视图-view"}},[t._v("#")]),t._v(" 17、视图(view)")]),t._v(" "),a("p",[t._v("创建视图对象：create  view  dept2_view  as  select  *  from  dept2;")]),t._v(" "),a("p",[t._v("注：上面as关键字后的语句必须是DQL语句。")]),t._v(" "),a("p",[t._v("删除视图：drop  view  dept2_view;")]),t._v(" "),a("p",[t._v("对视图对象的增删改查，会导致原表被操作。")]),t._v(" "),a("p",[t._v("视图本质就是将一块SQL语句进行封装，以便复用时节省空间。")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v("\temp_dept_view\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\n​\t\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ename "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sal "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dname\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n​\t\t\temp e\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v("\n\n​\t\t\tdept d\n\n​\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n​\t\t\te"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deptno "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("as  后面的整块SQL语句被封装进了emp_dept_view中")]),t._v(" "),a("h1",{attrs:{id:"_18、数据库设计范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18、数据库设计范式"}},[t._v("#")]),t._v(" 18、数据库设计范式")]),t._v(" "),a("p",[t._v("目的：设计合理的数据库表，避免数据冗余、空间浪费。")]),t._v(" "),a("p",[t._v("分类：")]),t._v(" "),a("p",[t._v("​\t\t第一范式：要求任何一张表必须有主键，每一个字段的原子性不可再分。")]),t._v(" "),a("p",[t._v("​\t\t第二范式：建立在第一范式之上，要求所有非主键字段完全依赖主键，不要产生部分依赖。")]),t._v(" "),a("p",[t._v("​\t\t第三范式：建立在第二范式之上，要求所有非主关键字直接依赖主键，不要产生传递依赖。")]),t._v(" "),a("h2",{attrs:{id:"_18-1-第一范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-第一范式"}},[t._v("#")]),t._v(" 18.1 第一范式")]),t._v(" "),a("p",[t._v("最核心最重要的范式，所有表的设计都要满足。")]),t._v(" "),a("p",[t._v("有主键，且字段内容不可再分的表满足第一范式。")]),t._v(" "),a("h2",{attrs:{id:"_18-2-第二范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-第二范式"}},[t._v("#")]),t._v(" 18.2 第二范式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("学生编号(复合主键)")]),t._v(" "),a("th",[t._v("教师编号(复合主键)")]),t._v(" "),a("th",[t._v("学生姓名")]),t._v(" "),a("th",[t._v("教师姓名")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1001")]),t._v(" "),a("td",[t._v("001")]),t._v(" "),a("td",[t._v("张三")]),t._v(" "),a("td",[t._v("王老师")])]),t._v(" "),a("tr",[a("td",[t._v("1002")]),t._v(" "),a("td",[t._v("002")]),t._v(" "),a("td",[t._v("李四")]),t._v(" "),a("td",[t._v("赵老师")])]),t._v(" "),a("tr",[a("td",[t._v("1003")]),t._v(" "),a("td",[t._v("001")]),t._v(" "),a("td",[t._v("王五")]),t._v(" "),a("td",[t._v("王老师")])]),t._v(" "),a("tr",[a("td",[t._v("1001")]),t._v(" "),a("td",[t._v("002")]),t._v(" "),a("td",[t._v("张三")]),t._v(" "),a("td",[t._v("赵老师")])])])]),t._v(" "),a("p",[t._v("这种表不符合第二范式，因为学生只依赖学生编号，老师只依赖教师编号，数据易冗余。")]),t._v(" "),a("p",[t._v("为了满足第二范式，要将上面的表分解成多个子表(如下)。")]),t._v(" "),a("p",[t._v("学生表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("学生编号(pk)")]),t._v(" "),a("th",[t._v("学生名字")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1001")]),t._v(" "),a("td",[t._v("张三")])]),t._v(" "),a("tr",[a("td",[t._v("1002")]),t._v(" "),a("td",[t._v("李四")])]),t._v(" "),a("tr",[a("td",[t._v("1003")]),t._v(" "),a("td",[t._v("王五")])])])]),t._v(" "),a("p",[t._v("教师表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("教师编号(pk)")]),t._v(" "),a("th",[t._v("教师姓名")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("001")]),t._v(" "),a("td",[t._v("王老师")])]),t._v(" "),a("tr",[a("td",[t._v("002")]),t._v(" "),a("td",[t._v("赵老师")])])])]),t._v(" "),a("p",[t._v("学生教师关系表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("id(pk)")]),t._v(" "),a("th",[t._v("学生编号(fk)")]),t._v(" "),a("th",[t._v("教师编号(fk)")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("1001")]),t._v(" "),a("td",[t._v("001")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("1002")]),t._v(" "),a("td",[t._v("002")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("1003")]),t._v(" "),a("td",[t._v("001")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("1001")]),t._v(" "),a("td",[t._v("002")])])])]),t._v(" "),a("p",[a("u",[t._v("多对多设计技巧：多对多，三张表，关系表两个外键。")])]),t._v(" "),a("h2",{attrs:{id:"_18-3-第三范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-3-第三范式"}},[t._v("#")]),t._v(" 18.3 第三范式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("学生编号(pk)")]),t._v(" "),a("th",[t._v("学生姓名")]),t._v(" "),a("th",[t._v("班级编号")]),t._v(" "),a("th",[t._v("班级名称")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1001")]),t._v(" "),a("td",[t._v("张三")]),t._v(" "),a("td",[t._v("01")]),t._v(" "),a("td",[t._v("一班")])]),t._v(" "),a("tr",[a("td",[t._v("1002")]),t._v(" "),a("td",[t._v("李四")]),t._v(" "),a("td",[t._v("02")]),t._v(" "),a("td",[t._v("二班")])]),t._v(" "),a("tr",[a("td",[t._v("1003")]),t._v(" "),a("td",[t._v("王五")]),t._v(" "),a("td",[t._v("03")]),t._v(" "),a("td",[t._v("三班")])]),t._v(" "),a("tr",[a("td",[t._v("1004")]),t._v(" "),a("td",[t._v("赵六")]),t._v(" "),a("td",[t._v("04")]),t._v(" "),a("td",[t._v("四班")])])])]),t._v(" "),a("p",[t._v("上标满足第一、二范式。")]),t._v(" "),a("p",[t._v("不满足第三范式，因为班级名称依赖班级编号，而班级编号又依赖学生编号，这就产生了传递依赖，会有数据冗余。")]),t._v(" "),a("p",[t._v("为满足第三范式，可以将上标拆成两张表(如下)。")]),t._v(" "),a("p",[t._v("班级表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("班级编号(pk)")]),t._v(" "),a("th",[t._v("班级名称")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("01")]),t._v(" "),a("td",[t._v("一班")])]),t._v(" "),a("tr",[a("td",[t._v("02")]),t._v(" "),a("td",[t._v("二班")])]),t._v(" "),a("tr",[a("td",[t._v("03")]),t._v(" "),a("td",[t._v("三班")])]),t._v(" "),a("tr",[a("td",[t._v("04")]),t._v(" "),a("td",[t._v("四班")])])])]),t._v(" "),a("p",[t._v("学生表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("学生编号(pk)")]),t._v(" "),a("th",[t._v("学生姓名")]),t._v(" "),a("th",[t._v("班级编号(fk)")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1001")]),t._v(" "),a("td",[t._v("张三")]),t._v(" "),a("td",[t._v("01")])]),t._v(" "),a("tr",[a("td",[t._v("1002")]),t._v(" "),a("td",[t._v("李四")]),t._v(" "),a("td",[t._v("02")])]),t._v(" "),a("tr",[a("td",[t._v("1003")]),t._v(" "),a("td",[t._v("王五")]),t._v(" "),a("td",[t._v("03")])]),t._v(" "),a("tr",[a("td",[t._v("1004")]),t._v(" "),a("td",[t._v("赵六")]),t._v(" "),a("td",[t._v("04")])])])]),t._v(" "),a("p",[a("u",[t._v("第三范式设计技巧：一对多，两张表，多的表，加外键。")])]),t._v(" "),a("h2",{attrs:{id:"_18-4-总结表的设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-4-总结表的设计"}},[t._v("#")]),t._v(" 18.4 总结表的设计")]),t._v(" "),a("p",[t._v("一对多：")]),t._v(" "),a("p",[t._v("​\t\t一对多，两张表，多的表加外键。")]),t._v(" "),a("p",[t._v("多对多：")]),t._v(" "),a("p",[t._v("​\t\t多对多，三张表，关系表两个外键。")]),t._v(" "),a("p",[t._v("一对一：")]),t._v(" "),a("p",[t._v("​\t\t若字段过多，则要考虑拆成多个更小的表，并用外键加以联系。")]),t._v(" "),a("p",[t._v("​\t\t一对一，外键唯一。")]),t._v(" "),a("p",[t._v("不过实践和理论之间存在偏差。")]),t._v(" "),a("p",[a("b",[t._v("从实践上来说")]),t._v("，设计表的最终目的都是为了满足客户的要求，有时会拿冗余换执行速度。因为在sql中，表和表之间连接次数越多，效率越低。(笛卡尔积)")]),t._v(" "),a("h1",{attrs:{id:"可参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可参考资料"}},[t._v("#")]),t._v(" 可参考资料：")]),t._v(" "),a("p",[t._v("数据库范式："),a("a",{attrs:{href:"https://www.zhihu.com/question/24696366/answer/29189700",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.zhihu.com/question/24696366/answer/29189700"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);